/** Official generated by SandtableEngine (d.ts) */
/** Website: https://sengine.mp-gamer.com/ */
/** generated time: 2023.11.27 */
/** (The declaration file may be updated periodically) */

/** **(Public Method) >> Native/Main** [https://sengine.mp-gamer.com/scripting/native/main#isservermode](https://sengine.mp-gamer.com/scripting/native/main#isservermode) */
declare static function IsServerMode(): bool;
/** **(Public Method) >> Native/Main** [https://sengine.mp-gamer.com/scripting/native/main#getversioninfo](https://sengine.mp-gamer.com/scripting/native/main#getversioninfo) */
declare static function GetVersionInfo(): string;
/** **(Public Method) >> Native/Main** [https://sengine.mp-gamer.com/scripting/native/main#getenginetickcount](https://sengine.mp-gamer.com/scripting/native/main#getenginetickcount) */
declare static function GetEngineTickCount(): float;
/** **(Public Method) >> Native/Main** [https://sengine.mp-gamer.com/scripting/native/main#getmodtickcount](https://sengine.mp-gamer.com/scripting/native/main#getmodtickcount) */
declare static function GetModTickCount(): float;
/** **(Public Method) >> Native/Main** [https://sengine.mp-gamer.com/scripting/native/main#getdatetime](https://sengine.mp-gamer.com/scripting/native/main#getdatetime) */
declare static function GetDateTime(): string;
/** **(Public Method) >> Native/Main** [https://sengine.mp-gamer.com/scripting/native/main#gettimestamp](https://sengine.mp-gamer.com/scripting/native/main#gettimestamp) */
declare static function GetTimestamp(): Int64;
/** **(Public Method) >> Native/Main** [https://sengine.mp-gamer.com/scripting/native/main#getsysteminfo](https://sengine.mp-gamer.com/scripting/native/main#getsysteminfo) */
declare static function GetSystemInfo(): string;
/** **(Public Method) >> Native/Main** [https://sengine.mp-gamer.com/scripting/native/main#getmodarchive](https://sengine.mp-gamer.com/scripting/native/main#getmodarchive) */
declare static function GetModArchive(mod: string = null): string;
/** **(Public Method) >> Native/Main** [https://sengine.mp-gamer.com/scripting/native/main#getsaveitem](https://sengine.mp-gamer.com/scripting/native/main#getsaveitem) */
declare static function GetSaveItem(key: string, slot: int = 0, defaultValue: any = null): any;
/** **(Public Method) >> Native/Main** [https://sengine.mp-gamer.com/scripting/native/main#existsaveitem](https://sengine.mp-gamer.com/scripting/native/main#existsaveitem) */
declare static function ExistSaveItem(key: string, slot: int = 0): bool;
/** **(Public Method) >> Native/Main** [https://sengine.mp-gamer.com/scripting/native/main#existsavedata](https://sengine.mp-gamer.com/scripting/native/main#existsavedata) */
declare static function ExistSaveData(slot: int = 0): bool;
/** **(Public Method) >> Native/Main** [https://sengine.mp-gamer.com/scripting/native/main#getscriptname](https://sengine.mp-gamer.com/scripting/native/main#getscriptname) */
declare static function GetScriptName(): string;
/** **(Public Method) >> Native/Main** [https://sengine.mp-gamer.com/scripting/native/main#getmapname](https://sengine.mp-gamer.com/scripting/native/main#getmapname) */
declare static function GetMapName(): string;
/** **(Public Method) >> Native/Main** [https://sengine.mp-gamer.com/scripting/native/main#getmapcount](https://sengine.mp-gamer.com/scripting/native/main#getmapcount) */
declare static function GetMapCount(filter: int = 0): int;
/** **(Public Method) >> Native/Main** [https://sengine.mp-gamer.com/scripting/native/main#getmapbyindex](https://sengine.mp-gamer.com/scripting/native/main#getmapbyindex) */
declare static function GetMapByIndex(index: int, filter: int = 0): string;
/** **(Public Method) >> Native/Main** [https://sengine.mp-gamer.com/scripting/native/main#quitgame](https://sengine.mp-gamer.com/scripting/native/main#quitgame) */
declare static function QuitGame(): void;
/** **(Public Method) >> Native/Main** [https://sengine.mp-gamer.com/scripting/native/main#createhost](https://sengine.mp-gamer.com/scripting/native/main#createhost) */
declare static function CreateHost(map: string, script: string, port: int = 0, address: string = "", userData: string = "", additional: bool = true): bool;
/** **(Public Method) >> Native/Main** [https://sengine.mp-gamer.com/scripting/native/main#connecthost](https://sengine.mp-gamer.com/scripting/native/main#connecthost) */
declare static function ConnectHost(address: string, port: int = 0, password: string = "", userData: string = ""): void;
/** **(Public Method) >> Native/Main** [https://sengine.mp-gamer.com/scripting/native/main#disconnect](https://sengine.mp-gamer.com/scripting/native/main#disconnect) */
declare static function Disconnect(): void;
/** **(Public Method) >> Native/Main** [https://sengine.mp-gamer.com/scripting/native/main#reconnect](https://sengine.mp-gamer.com/scripting/native/main#reconnect) */
declare static function Reconnect(): void;
/** **(Public Method) >> Native/Main** [https://sengine.mp-gamer.com/scripting/native/main#unloadmod](https://sengine.mp-gamer.com/scripting/native/main#unloadmod) */
declare static function UnloadMod(): void;
/** **(Public Method) >> Native/Main** [https://sengine.mp-gamer.com/scripting/native/main#distancepoint](https://sengine.mp-gamer.com/scripting/native/main#distancepoint) */
declare static function DistancePoint(pos1: Vector, pos2: Vector): float;
/** **(Public Method) >> Native/Main** [https://sengine.mp-gamer.com/scripting/native/main#inpoly](https://sengine.mp-gamer.com/scripting/native/main#inpoly) */
declare static function InPoly(p: Vector, p1: Vector, p2: Vector, p3: Vector, p4: Vector = null, p5: Vector = null, p6: Vector = null, p7: Vector = null, p8: Vector = null): bool;
/** **(Public Method) >> Native/Main** [https://sengine.mp-gamer.com/scripting/native/main#getlanguage](https://sengine.mp-gamer.com/scripting/native/main#getlanguage) */
declare static function GetLanguage(): string;
/** **(Public Method) >> Native/Main** [https://sengine.mp-gamer.com/scripting/native/main#getlanguagetext](https://sengine.mp-gamer.com/scripting/native/main#getlanguagetext) */
declare static function GetLanguageText(key: string, index: int = 0, values: String[]): string;
/** **(Public Method) >> Native/Main** [https://sengine.mp-gamer.com/scripting/native/main#getlanguagetext](https://sengine.mp-gamer.com/scripting/native/main#getlanguagetext) */
declare static function GetLanguageText(key: string, values: String[]): string;
/** **(Public Method) >> Native/Main** [https://sengine.mp-gamer.com/scripting/native/main#_language](https://sengine.mp-gamer.com/scripting/native/main#_language) */
declare static function _Language(key: string, index: int = 0, values: String[]): string;
/** **(Public Method) >> Native/Main** [https://sengine.mp-gamer.com/scripting/native/main#_language](https://sengine.mp-gamer.com/scripting/native/main#_language) */
declare static function _Language(key: string, values: String[]): string;
/** **(Public Method) >> Native/Main** [https://sengine.mp-gamer.com/scripting/native/main#getvectorpointcount](https://sengine.mp-gamer.com/scripting/native/main#getvectorpointcount) */
declare static function GetVectorPointCount(tag: string = ""): int;
/** **(Public Method) >> Native/Main** [https://sengine.mp-gamer.com/scripting/native/main#getvectorpoint](https://sengine.mp-gamer.com/scripting/native/main#getvectorpoint) */
declare static function GetVectorPoint(tag: string, index: int = 0): WorldVectorPoint;
/** **(Public Method) >> Native/Main** [https://sengine.mp-gamer.com/scripting/native/main#addvectorpoint](https://sengine.mp-gamer.com/scripting/native/main#addvectorpoint) */
declare static function AddVectorPoint(tag: string, pos: Vector, angle: Vector = null, scale: Vector = null): WorldVectorPoint;
/** **(Public Method) >> Native/Main** [https://sengine.mp-gamer.com/scripting/native/main#removevectorpoint](https://sengine.mp-gamer.com/scripting/native/main#removevectorpoint) */
declare static function RemoveVectorPoint(tag: string = ""): void;
/** **(Static Method) >> DataType** [https://sengine.mp-gamer.com/scripting/datatype#vector](https://sengine.mp-gamer.com/scripting/datatype#vector) */
declare static function Vector(x: float, y: float, z: float): Vector;
/** **(Static Method) >> DataType** [https://sengine.mp-gamer.com/scripting/datatype#vector2](https://sengine.mp-gamer.com/scripting/datatype#vector2) */
declare static function Vector2(x: float, y: float): Vector;
/** **(Static Method) >> DataType** [https://sengine.mp-gamer.com/scripting/datatype#color](https://sengine.mp-gamer.com/scripting/datatype#color) */
declare static function Color(r: byte, g: byte, b: byte, a: byte = byte): Color;
/** **(Public Method) >> World/Main** [https://sengine.mp-gamer.com/scripting/world/main#setglobalvars](https://sengine.mp-gamer.com/scripting/world/main#setglobalvars) */
declare static function SetGlobalVars(name: string, vars: any): void;
/** **(Public Method) >> World/Main** [https://sengine.mp-gamer.com/scripting/world/main#getglobalvars](https://sengine.mp-gamer.com/scripting/world/main#getglobalvars) */
declare static function GetGlobalVars(name: string): any;
/** **(Public Method) >> World/Main** [https://sengine.mp-gamer.com/scripting/world/main#dlog](https://sengine.mp-gamer.com/scripting/world/main#dlog) */
declare static function DLog(log: any): void;
/** **(Public Method) >> World/Main** [https://sengine.mp-gamer.com/scripting/world/main#dwarn](https://sengine.mp-gamer.com/scripting/world/main#dwarn) */
declare static function DWarn(log: any): void;
/** **(Public Method) >> World/Main** [https://sengine.mp-gamer.com/scripting/world/main#derror](https://sengine.mp-gamer.com/scripting/world/main#derror) */
declare static function DError(log: any): void;
/** **(Public Method) >> World/Main** [https://sengine.mp-gamer.com/scripting/world/main#exec](https://sengine.mp-gamer.com/scripting/world/main#exec) */
declare static function Exec(exec: string): void;
/** **(Public Method) >> World/Main** [https://sengine.mp-gamer.com/scripting/world/main#loadscript](https://sengine.mp-gamer.com/scripting/world/main#loadscript) */
declare static function LoadScript(localPath: string): void;
/** **(Public Method) >> World/Main** [https://sengine.mp-gamer.com/scripting/world/main#sethostname](https://sengine.mp-gamer.com/scripting/world/main#sethostname) */
declare static function SetHostName(name: string): void;
/** **(Public Method) >> World/Main** [https://sengine.mp-gamer.com/scripting/world/main#gethostname](https://sengine.mp-gamer.com/scripting/world/main#gethostname) */
declare static function GetHostName(): string;
/** **(Public Method) >> World/Main** [https://sengine.mp-gamer.com/scripting/world/main#setpassword](https://sengine.mp-gamer.com/scripting/world/main#setpassword) */
declare static function SetPassword(password: string): void;
/** **(Public Method) >> World/Main** [https://sengine.mp-gamer.com/scripting/world/main#getpassword](https://sengine.mp-gamer.com/scripting/world/main#getpassword) */
declare static function GetPassword(): string;
/** **(Public Method) >> World/Main** [https://sengine.mp-gamer.com/scripting/world/main#setmaxplayers](https://sengine.mp-gamer.com/scripting/world/main#setmaxplayers) */
declare static function SetMaxPlayers(number: int): void;
/** **(Public Method) >> World/Main** [https://sengine.mp-gamer.com/scripting/world/main#getmaxplayers](https://sengine.mp-gamer.com/scripting/world/main#getmaxplayers) */
declare static function GetMaxPlayers(): int;
/** **(Public Method) >> World/Main** [https://sengine.mp-gamer.com/scripting/world/main#settime](https://sengine.mp-gamer.com/scripting/world/main#settime) */
declare static function SetTime(hour: int, minute: int): void;
/** **(Public Method) >> World/Main** [https://sengine.mp-gamer.com/scripting/world/main#gettime](https://sengine.mp-gamer.com/scripting/world/main#gettime) */
declare static function GetTime(): WorldTime;
/** **(Public Method) >> World/Main** [https://sengine.mp-gamer.com/scripting/world/main#setweather](https://sengine.mp-gamer.com/scripting/world/main#setweather) */
declare static function SetWeather(weather: int): void;
/** **(Public Method) >> World/Main** [https://sengine.mp-gamer.com/scripting/world/main#getweather](https://sengine.mp-gamer.com/scripting/world/main#getweather) */
declare static function GetWeather(): int;
/** **(Public Method) >> World/Main** [https://sengine.mp-gamer.com/scripting/world/main#getrandomweather](https://sengine.mp-gamer.com/scripting/world/main#getrandomweather) */
declare static function GetRandomWeather(): int;
/** **(Public Method) >> World/Main** [https://sengine.mp-gamer.com/scripting/world/main#setgravity](https://sengine.mp-gamer.com/scripting/world/main#setgravity) */
declare static function SetGravity(space: Vector): void;
/** **(Public Method) >> World/Main** [https://sengine.mp-gamer.com/scripting/world/main#getgravity](https://sengine.mp-gamer.com/scripting/world/main#getgravity) */
declare static function GetGravity(): Vector;
/** **(Public Method) >> World/Main** [https://sengine.mp-gamer.com/scripting/world/main#setworldcolor](https://sengine.mp-gamer.com/scripting/world/main#setworldcolor) */
declare static function SetWorldColor(color: Color): void;
/** **(Public Method) >> World/Main** [https://sengine.mp-gamer.com/scripting/world/main#getworldcolor](https://sengine.mp-gamer.com/scripting/world/main#getworldcolor) */
declare static function GetWorldColor(): Color;
/** **(Public Method) >> World/Main** [https://sengine.mp-gamer.com/scripting/world/main#setgamerule](https://sengine.mp-gamer.com/scripting/world/main#setgamerule) */
declare static function SetGameRule(key: string, value: any): void;
/** **(Public Method) >> World/Main** [https://sengine.mp-gamer.com/scripting/world/main#resetgamerule](https://sengine.mp-gamer.com/scripting/world/main#resetgamerule) */
declare static function ResetGameRule(key: string): void;
/** **(Public Method) >> World/Main** [https://sengine.mp-gamer.com/scripting/world/main#resetallgamerules](https://sengine.mp-gamer.com/scripting/world/main#resetallgamerules) */
declare static function ResetAllGameRules(): void;
/** **(Public Method) >> World/Main** [https://sengine.mp-gamer.com/scripting/world/main#getgamerule](https://sengine.mp-gamer.com/scripting/world/main#getgamerule) */
declare static function GetGameRule(key: string, defaultValue: any = null): any;
/** **(Public Method) >> World/Main** [https://sengine.mp-gamer.com/scripting/world/main#getservertickcount](https://sengine.mp-gamer.com/scripting/world/main#getservertickcount) */
declare static function GetServerTickCount(): float;
/** **(Public Method) >> World/Main** [https://sengine.mp-gamer.com/scripting/world/main#message](https://sengine.mp-gamer.com/scripting/world/main#message) */
declare static function Message(text: any): void;
/** **(Public Method) >> World/Main** [https://sengine.mp-gamer.com/scripting/world/main#announce](https://sengine.mp-gamer.com/scripting/world/main#announce) */
declare static function Announce(text: any, type: int = 0, time: float = 6): void;
/** **(Public Method) >> World/Main** [https://sengine.mp-gamer.com/scripting/world/main#subtitle](https://sengine.mp-gamer.com/scripting/world/main#subtitle) */
declare static function Subtitle(text: any): void;
/** **(Public Method) >> World/Main** [https://sengine.mp-gamer.com/scripting/world/main#raytrace](https://sengine.mp-gamer.com/scripting/world/main#raytrace) */
declare static function RayTrace(start: Vector, over: Vector, flags: int = 0): RayTraceResult;
/** **(Public Method) >> World/Main** [https://sengine.mp-gamer.com/scripting/world/main#createdamage](https://sengine.mp-gamer.com/scripting/world/main#createdamage) */
declare static function CreateDamage(pos: Vector, damage: int, radius: float, from: Entity = null, damageType: int = 1, ignoreSelf: bool = false): void;
/** **(Public Method) >> World/Main** [https://sengine.mp-gamer.com/scripting/world/main#createexplosion](https://sengine.mp-gamer.com/scripting/world/main#createexplosion) */
declare static function CreateExplosion(pos: Vector, type: int = 0): void;
/** **(Public Method) >> World/Main** [https://sengine.mp-gamer.com/scripting/world/main#createexplosionforce](https://sengine.mp-gamer.com/scripting/world/main#createexplosionforce) */
declare static function CreateExplosionForce(pos: Vector, force: float, radius: float): void;
/** **(Public Method) >> World/Main** [https://sengine.mp-gamer.com/scripting/world/main#createraypowercast](https://sengine.mp-gamer.com/scripting/world/main#createraypowercast) */
declare static function CreateRayPowerCast(start: Vector, over: Vector, color: Color, width: float = 0.2, time: float = 0.1): void;
/** **(Public Method) >> World/Main** [https://sengine.mp-gamer.com/scripting/world/main#overlapentity](https://sengine.mp-gamer.com/scripting/world/main#overlapentity) */
declare static function OverlapEntity(pos: Vector, radius: float, filter: int = 0): int;
/** **(Public Method) >> World/Main** [https://sengine.mp-gamer.com/scripting/world/main#overlapentitybyindex](https://sengine.mp-gamer.com/scripting/world/main#overlapentitybyindex) */
declare static function OverlapEntityByIndex(index: int): Entity;
/** **(Public Method) >> World/Main** [https://sengine.mp-gamer.com/scripting/world/main#playsoundforall](https://sengine.mp-gamer.com/scripting/world/main#playsoundforall) */
declare static function PlaySoundForAll(audioID: int, loop: bool = false, volume: float = 1): void;
/** **(Public Method) >> World/Main** [https://sengine.mp-gamer.com/scripting/world/main#play3dsoundforall](https://sengine.mp-gamer.com/scripting/world/main#play3dsoundforall) */
declare static function Play3DSoundForAll(audioID: int, pos: Vector, radius: float = 80, loop: bool = false, volume: float = 1): void;
/** **(Public Method) >> World/Main** [https://sengine.mp-gamer.com/scripting/world/main#playsound](https://sengine.mp-gamer.com/scripting/world/main#playsound) */
declare static function PlaySound(audioID: int, loop: bool = false, volume: float = 1): string;
/** **(Public Method) >> World/Main** [https://sengine.mp-gamer.com/scripting/world/main#play3dsound](https://sengine.mp-gamer.com/scripting/world/main#play3dsound) */
declare static function Play3DSound(audioID: int, pos: Vector, radius: float = 80, loop: bool = false, volume: float = 1): string;
/** **(Public Method) >> World/Main** [https://sengine.mp-gamer.com/scripting/world/main#stopsound](https://sengine.mp-gamer.com/scripting/world/main#stopsound) */
declare static function StopSound(uuid: string): bool;
/** **(Public Method) >> World/Main** [https://sengine.mp-gamer.com/scripting/world/main#pausesound](https://sengine.mp-gamer.com/scripting/world/main#pausesound) */
declare static function PauseSound(uuid: string): bool;
/** **(Public Method) >> World/Main** [https://sengine.mp-gamer.com/scripting/world/main#resumesound](https://sengine.mp-gamer.com/scripting/world/main#resumesound) */
declare static function ResumeSound(uuid: string): bool;
/** **(Public Method) >> World/Main** [https://sengine.mp-gamer.com/scripting/world/main#setsoundworld](https://sengine.mp-gamer.com/scripting/world/main#setsoundworld) */
declare static function SetSoundWorld(uuid: string, world: int): bool;
/** **(Public Method) >> World/Main** [https://sengine.mp-gamer.com/scripting/world/main#bindkey](https://sengine.mp-gamer.com/scripting/world/main#bindkey) */
declare static function BindKey(keyTag: string, key1: int, key2: int = 0, key3: int = 0): void;
/** **(Public Method) >> World/Main** [https://sengine.mp-gamer.com/scripting/world/main#bindkey](https://sengine.mp-gamer.com/scripting/world/main#bindkey) */
declare static function BindKey(keyTag: string, key1: int, key2: int = 0, key3: int = 0): void;
/** **(Public Method) >> World/Main** [https://sengine.mp-gamer.com/scripting/world/main#bindkey](https://sengine.mp-gamer.com/scripting/world/main#bindkey) */
declare static function BindKey(keyTag: string, key1: string, key2: string = None, key3: string = None): void;
/** **(Public Method) >> World/Main** [https://sengine.mp-gamer.com/scripting/world/main#unbindkey](https://sengine.mp-gamer.com/scripting/world/main#unbindkey) */
declare static function UnbindKey(keyTag: string): void;
/** **(Public Method) >> World/Main** [https://sengine.mp-gamer.com/scripting/world/main#unbindallkey](https://sengine.mp-gamer.com/scripting/world/main#unbindallkey) */
declare static function UnbindAllKey(): void;
/** **(Public Method) >> World/Main** [https://sengine.mp-gamer.com/scripting/world/main#bindnativekey](https://sengine.mp-gamer.com/scripting/world/main#bindnativekey) */
declare static function BindNativeKey(keyTag: string): void;
/** **(Public Method) >> World/Main** [https://sengine.mp-gamer.com/scripting/world/main#unbindnativekey](https://sengine.mp-gamer.com/scripting/world/main#unbindnativekey) */
declare static function UnbindNativeKey(keyTag: string): void;
/** **(Public Method) >> World/Main** [https://sengine.mp-gamer.com/scripting/world/main#unbindallnativekey](https://sengine.mp-gamer.com/scripting/world/main#unbindallnativekey) */
declare static function UnbindAllNativeKey(): void;
/** **(Public Method) >> World/Main** [https://sengine.mp-gamer.com/scripting/world/main#writefile](https://sengine.mp-gamer.com/scripting/world/main#writefile) */
declare static function WriteFile(localPath: string, content: string): void;
/** **(Public Method) >> World/Main** [https://sengine.mp-gamer.com/scripting/world/main#readfile](https://sengine.mp-gamer.com/scripting/world/main#readfile) */
declare static function ReadFile(localPath: string): string;
/** **(Public Method) >> World/Main** [https://sengine.mp-gamer.com/scripting/world/main#setmodarchive](https://sengine.mp-gamer.com/scripting/world/main#setmodarchive) */
declare static function SetModArchive(content: string): void;
/** **(Public Method) >> World/Main** [https://sengine.mp-gamer.com/scripting/world/main#setsaveitem](https://sengine.mp-gamer.com/scripting/world/main#setsaveitem) */
declare static function SetSaveItem(key: string, value: any, slot: int = 0): void;
/** **(Public Method) >> World/Main** [https://sengine.mp-gamer.com/scripting/world/main#removesaveitem](https://sengine.mp-gamer.com/scripting/world/main#removesaveitem) */
declare static function RemoveSaveItem(key: string, slot: int = 0): void;
/** **(Public Method) >> World/Main** [https://sengine.mp-gamer.com/scripting/world/main#deletesavedata](https://sengine.mp-gamer.com/scripting/world/main#deletesavedata) */
declare static function DeleteSaveData(slot: int = 0): void;
/** **(Public Method) >> Client/Main** [https://sengine.mp-gamer.com/scripting/client/main#setglobalvars](https://sengine.mp-gamer.com/scripting/client/main#setglobalvars) */
declare static function SetGlobalVars(name: string, vars: any): void;
/** **(Public Method) >> Client/Main** [https://sengine.mp-gamer.com/scripting/client/main#getglobalvars](https://sengine.mp-gamer.com/scripting/client/main#getglobalvars) */
declare static function GetGlobalVars(name: string): any;
/** **(Public Method) >> Client/Main** [https://sengine.mp-gamer.com/scripting/client/main#dlog](https://sengine.mp-gamer.com/scripting/client/main#dlog) */
declare static function DLog(log: any): void;
/** **(Public Method) >> Client/Main** [https://sengine.mp-gamer.com/scripting/client/main#dwarn](https://sengine.mp-gamer.com/scripting/client/main#dwarn) */
declare static function DWarn(log: any): void;
/** **(Public Method) >> Client/Main** [https://sengine.mp-gamer.com/scripting/client/main#derror](https://sengine.mp-gamer.com/scripting/client/main#derror) */
declare static function DError(log: any): void;
/** **(Public Method) >> Client/Main** [https://sengine.mp-gamer.com/scripting/client/main#exec](https://sengine.mp-gamer.com/scripting/client/main#exec) */
declare static function Exec(code: string): void;
/** **(Public Method) >> Client/Main** [https://sengine.mp-gamer.com/scripting/client/main#loadscript](https://sengine.mp-gamer.com/scripting/client/main#loadscript) */
declare static function LoadScript(localPath: string): void;
/** **(Public Method) >> Client/Main** [https://sengine.mp-gamer.com/scripting/client/main#openurl](https://sengine.mp-gamer.com/scripting/client/main#openurl) */
declare static function OpenUrl(url: string): void;
/** **(Public Method) >> Client/Main** [https://sengine.mp-gamer.com/scripting/client/main#createnativeview](https://sengine.mp-gamer.com/scripting/client/main#createnativeview) */
declare static function CreateNativeView(type: int, onDisable: Action = null): void;
/** **(Public Method) >> Client/Main** [https://sengine.mp-gamer.com/scripting/client/main#existnativeview](https://sengine.mp-gamer.com/scripting/client/main#existnativeview) */
declare static function ExistNativeView(type: int): bool;
/** **(Public Method) >> Client/Main** [https://sengine.mp-gamer.com/scripting/client/main#destroynativeview](https://sengine.mp-gamer.com/scripting/client/main#destroynativeview) */
declare static function DestroyNativeView(type: int = -1, hasEffect: bool = true): void;
/** **(Public Method) >> Client/Main** [https://sengine.mp-gamer.com/scripting/client/main#createnativemenu](https://sengine.mp-gamer.com/scripting/client/main#createnativemenu) */
declare static function CreateNativeMenu(data: any): void;
/** **(Public Method) >> Client/Main** [https://sengine.mp-gamer.com/scripting/client/main#destroynativemenu](https://sengine.mp-gamer.com/scripting/client/main#destroynativemenu) */
declare static function DestroyNativeMenu(): void;
/** **(Public Method) >> Client/Main** [https://sengine.mp-gamer.com/scripting/client/main#setnativemenutext](https://sengine.mp-gamer.com/scripting/client/main#setnativemenutext) */
declare static function SetNativeMenuText(index: int, text: string): void;
/** **(Public Method) >> Client/Main** [https://sengine.mp-gamer.com/scripting/client/main#setnativemenutext](https://sengine.mp-gamer.com/scripting/client/main#setnativemenutext) */
declare static function SetNativeMenuText(tag: string, text: string): void;
/** **(Public Method) >> Client/Main** [https://sengine.mp-gamer.com/scripting/client/main#findnativemenuindex](https://sengine.mp-gamer.com/scripting/client/main#findnativemenuindex) */
declare static function FindNativeMenuIndex(tag: string): int;
/** **(Public Method) >> Client/Main** [https://sengine.mp-gamer.com/scripting/client/main#loadnativescene](https://sengine.mp-gamer.com/scripting/client/main#loadnativescene) */
declare static function LoadNativeScene(type: int): void;
/** **(Public Method) >> Client/Main** [https://sengine.mp-gamer.com/scripting/client/main#senddatatoserver](https://sengine.mp-gamer.com/scripting/client/main#senddatatoserver) */
declare static function SendDataToServer(number: float, data: string): void;
/** **(Public Method) >> Client/Main** [https://sengine.mp-gamer.com/scripting/client/main#setchatenabled](https://sengine.mp-gamer.com/scripting/client/main#setchatenabled) */
declare static function SetChatEnabled(active: bool): void;
/** **(Public Method) >> Client/Main** [https://sengine.mp-gamer.com/scripting/client/main#overlapentity](https://sengine.mp-gamer.com/scripting/client/main#overlapentity) */
declare static function OverlapEntity(pos: Vector, radius: float, filter: int = 0): int;
/** **(Public Method) >> Client/Main** [https://sengine.mp-gamer.com/scripting/client/main#overlapentitybyindex](https://sengine.mp-gamer.com/scripting/client/main#overlapentitybyindex) */
declare static function OverlapEntityByIndex(index: int): Entity;
/** **(Public Method) >> Client/Main** [https://sengine.mp-gamer.com/scripting/client/main#bindkey](https://sengine.mp-gamer.com/scripting/client/main#bindkey) */
declare static function BindKey(keyTag: string, key1: int, key2: int = 0, key3: int = 0): void;
/** **(Public Method) >> Client/Main** [https://sengine.mp-gamer.com/scripting/client/main#bindkey](https://sengine.mp-gamer.com/scripting/client/main#bindkey) */
declare static function BindKey(keyTag: string, key1: int, key2: int = 0, key3: int = 0): void;
/** **(Public Method) >> Client/Main** [https://sengine.mp-gamer.com/scripting/client/main#bindkey](https://sengine.mp-gamer.com/scripting/client/main#bindkey) */
declare static function BindKey(keyTag: string, key1: string, key2: string = None, key3: string = None): void;
/** **(Public Method) >> Client/Main** [https://sengine.mp-gamer.com/scripting/client/main#unbindkey](https://sengine.mp-gamer.com/scripting/client/main#unbindkey) */
declare static function UnbindKey(keyTag: string): void;
/** **(Public Method) >> Client/Main** [https://sengine.mp-gamer.com/scripting/client/main#unbindallkey](https://sengine.mp-gamer.com/scripting/client/main#unbindallkey) */
declare static function UnbindAllKey(): void;
/** **(Public Method) >> Client/Main** [https://sengine.mp-gamer.com/scripting/client/main#bindnativekey](https://sengine.mp-gamer.com/scripting/client/main#bindnativekey) */
declare static function BindNativeKey(keyTag: string, key1: int, key2: int = 0, key3: int = 0): void;
/** **(Public Method) >> Client/Main** [https://sengine.mp-gamer.com/scripting/client/main#bindnativekey](https://sengine.mp-gamer.com/scripting/client/main#bindnativekey) */
declare static function BindNativeKey(keyTag: string, key1: int, key2: int = 0, key3: int = 0): void;
/** **(Public Method) >> Client/Main** [https://sengine.mp-gamer.com/scripting/client/main#bindnativekey](https://sengine.mp-gamer.com/scripting/client/main#bindnativekey) */
declare static function BindNativeKey(keyTag: string, key1: string, key2: string = None, key3: string = None): void;
/** **(Public Method) >> Client/Main** [https://sengine.mp-gamer.com/scripting/client/main#setgameoption](https://sengine.mp-gamer.com/scripting/client/main#setgameoption) */
declare static function SetGameOption(keyPath: string, value: any = null, isPublic: bool = false, publicParam: any = null): void;
/** **(Public Method) >> Client/Main** [https://sengine.mp-gamer.com/scripting/client/main#getgameoption](https://sengine.mp-gamer.com/scripting/client/main#getgameoption) */
declare static function GetGameOption(keyPath: string, defaultValue: any = null): any;
/** **(Public Method) >> Client/Main** [https://sengine.mp-gamer.com/scripting/client/main#message](https://sengine.mp-gamer.com/scripting/client/main#message) */
declare static function Message(text: string): void;
/** **(Public Method) >> Client/Main** [https://sengine.mp-gamer.com/scripting/client/main#announce](https://sengine.mp-gamer.com/scripting/client/main#announce) */
declare static function Announce(text: string, type: int = 0, time: float = 6): void;
/** **(Public Method) >> Client/Main** [https://sengine.mp-gamer.com/scripting/client/main#subtitle](https://sengine.mp-gamer.com/scripting/client/main#subtitle) */
declare static function Subtitle(text: string): void;
/** **(Public Method) >> Client/Main** [https://sengine.mp-gamer.com/scripting/client/main#screenfade](https://sengine.mp-gamer.com/scripting/client/main#screenfade) */
declare static function ScreenFade(time: float, middleTime: float, color: Color = null, onMiddle: Action = null, ignoreHit: bool = true): void;
/** **(Public Method) >> Client/Main** [https://sengine.mp-gamer.com/scripting/client/main#screenfadein](https://sengine.mp-gamer.com/scripting/client/main#screenfadein) */
declare static function ScreenFadeIn(time: float, color: Color = null, onComplete: Action = null, ignoreHit: bool = true): void;
/** **(Public Method) >> Client/Main** [https://sengine.mp-gamer.com/scripting/client/main#screenfadeout](https://sengine.mp-gamer.com/scripting/client/main#screenfadeout) */
declare static function ScreenFadeOut(time: float, color: Color = null, onComplete: Action = null, ignoreHit: bool = true): void;
/** **(Public Method) >> Client/Main** [https://sengine.mp-gamer.com/scripting/client/main#transition](https://sengine.mp-gamer.com/scripting/client/main#transition) */
declare static function Transition(index: int, addTime: float = 0, color: Color = null, action: Action = null, isOut: bool = false): void;
/** **(Public Method) >> Client/Main** [https://sengine.mp-gamer.com/scripting/client/main#setcursor](https://sengine.mp-gamer.com/scripting/client/main#setcursor) */
declare static function SetCursor(cursor: int): void;
/** **(Public Method) >> Client/Main** [https://sengine.mp-gamer.com/scripting/client/main#getcursor](https://sengine.mp-gamer.com/scripting/client/main#getcursor) */
declare static function GetCursor(): void;
/** **(Public Method) >> Client/Main** [https://sengine.mp-gamer.com/scripting/client/main#setmodarchive](https://sengine.mp-gamer.com/scripting/client/main#setmodarchive) */
declare static function SetModArchive(content: string = null): void;
/** **(Public Method) >> Client/Main** [https://sengine.mp-gamer.com/scripting/client/main#writefile](https://sengine.mp-gamer.com/scripting/client/main#writefile) */
declare static function WriteFile(localPath: string = null, content: string = null): void;
/** **(Public Method) >> Client/Main** [https://sengine.mp-gamer.com/scripting/client/main#setsavedata](https://sengine.mp-gamer.com/scripting/client/main#setsavedata) */
declare static function SetSaveData(key: string = null, value: any = null, slot: int = 0): void;
/** **(Public Method) >> Client/Main** [https://sengine.mp-gamer.com/scripting/client/main#readfile](https://sengine.mp-gamer.com/scripting/client/main#readfile) */
declare static function ReadFile(localPath: string): string;
/** **(Public Method) >> Client/Main** [https://sengine.mp-gamer.com/scripting/client/main#lockgamemenu](https://sengine.mp-gamer.com/scripting/client/main#lockgamemenu) */
declare static function LockGameMenu(index: int, mainTitle: string, childTitle: string, callback: Action): void;
/** **(Public Method) >> Client/Main** [https://sengine.mp-gamer.com/scripting/client/main#unlockgamemenu](https://sengine.mp-gamer.com/scripting/client/main#unlockgamemenu) */
declare static function UnlockGameMenu(index: int = -1): void;
/** **(Public Method) >> Client/Main** [https://sengine.mp-gamer.com/scripting/client/main#setgamemenubgeffect](https://sengine.mp-gamer.com/scripting/client/main#setgamemenubgeffect) */
declare static function SetGameMenuBGEffect(active: bool): void;
/** **(Namespace) >> World/Billboard** [https://sengine.mp-gamer.com/scripting/world/billboard](https://sengine.mp-gamer.com/scripting/world/billboard) */
declare namespace Billboard {
    /** **(Static Method) >> World/Billboard** [https://sengine.mp-gamer.com/scripting/world/billboard#billboardcreate](https://sengine.mp-gamer.com/scripting/world/billboard#billboardcreate) */
    declare static function Create(type: int, pos: Vector = null, streamPlayer: Player = null): Billboard;
    /** **(Static Method) >> World/Billboard** [https://sengine.mp-gamer.com/scripting/world/billboard#billboardcreatetips](https://sengine.mp-gamer.com/scripting/world/billboard#billboardcreatetips) */
    declare static function CreateTips(text: string, pos: Vector, time: float = 3, scale: float = 1, hasBG: bool = true, hasRotate: bool = true): void;
    /** **(Static Method) >> World/Billboard** [https://sengine.mp-gamer.com/scripting/world/billboard#billboardcreatespritebubble](https://sengine.mp-gamer.com/scripting/world/billboard#billboardcreatespritebubble) */
    declare static function CreateSpriteBubble(texture: int, pos: Vector, time: float = 3, scale: float = 1, hasBG: bool = true, hasRotate: bool = true): void;
    /** **(Static Method) >> World/Billboard** [https://sengine.mp-gamer.com/scripting/world/billboard#billboardfind](https://sengine.mp-gamer.com/scripting/world/billboard#billboardfind) */
    declare static function Find(id: int): Billboard;
    /** **(Static Method) >> World/Billboard** [https://sengine.mp-gamer.com/scripting/world/billboard#billboardfindbyuuid](https://sengine.mp-gamer.com/scripting/world/billboard#billboardfindbyuuid) */
    declare static function FindByUUID(uuid: string): Billboard;
    /** **(Static Method) >> World/Billboard** [https://sengine.mp-gamer.com/scripting/world/billboard#billboardgetcount](https://sengine.mp-gamer.com/scripting/world/billboard#billboardgetcount) */
    declare static function GetCount(): int;
    /** **(Static Method) >> World/Billboard** [https://sengine.mp-gamer.com/scripting/world/billboard#billboardget](https://sengine.mp-gamer.com/scripting/world/billboard#billboardget) */
    declare static function Get(index: int): Billboard;
}
/** **(Class) >> World/Billboard** */
declare class Billboard {
    /** **(Public Method) >> World/Billboard** [https://sengine.mp-gamer.com/scripting/world/billboard#billboardremove](https://sengine.mp-gamer.com/scripting/world/billboard#billboardremove) */
    Remove(): void;
    /** (Property) >> World/Billboard [https://sengine.mp-gamer.com/scripting/world/billboard#billboardinstance](https://sengine.mp-gamer.com/scripting/world/billboard#billboardinstance) */
    Instance: CBillboard;
    /** (Property) >> World/Billboard [https://sengine.mp-gamer.com/scripting/world/billboard#billboardid](https://sengine.mp-gamer.com/scripting/world/billboard#billboardid) */
    ID: int;
    /** (Property) >> World/Billboard [https://sengine.mp-gamer.com/scripting/world/billboard#billboarduuid](https://sengine.mp-gamer.com/scripting/world/billboard#billboarduuid) */
    UUID: string;
    /** (Property) >> World/Billboard [https://sengine.mp-gamer.com/scripting/world/billboard#billboardworld](https://sengine.mp-gamer.com/scripting/world/billboard#billboardworld) */
    World: int;
    /** (Property) >> World/Billboard [https://sengine.mp-gamer.com/scripting/world/billboard#billboardpos](https://sengine.mp-gamer.com/scripting/world/billboard#billboardpos) */
    Pos: Vector;
    /** (Property) >> World/Billboard [https://sengine.mp-gamer.com/scripting/world/billboard#billboardtype](https://sengine.mp-gamer.com/scripting/world/billboard#billboardtype) */
    Type: int;
    /** (Property) >> World/Billboard [https://sengine.mp-gamer.com/scripting/world/billboard#billboardcolor](https://sengine.mp-gamer.com/scripting/world/billboard#billboardcolor) */
    Color: Color;
    /** (Property) >> World/Billboard [https://sengine.mp-gamer.com/scripting/world/billboard#billboardalpha](https://sengine.mp-gamer.com/scripting/world/billboard#billboardalpha) */
    Alpha: int;
    /** (Property) >> World/Billboard [https://sengine.mp-gamer.com/scripting/world/billboard#billboardscale](https://sengine.mp-gamer.com/scripting/world/billboard#billboardscale) */
    Scale: float;
    /** (Property) >> World/Billboard [https://sengine.mp-gamer.com/scripting/world/billboard#billboardbaffle](https://sengine.mp-gamer.com/scripting/world/billboard#billboardbaffle) */
    Baffle: bool;
    /** (Property) >> World/Billboard [https://sengine.mp-gamer.com/scripting/world/billboard#billboardcollision](https://sengine.mp-gamer.com/scripting/world/billboard#billboardcollision) */
    Collision: bool;
    /** (Property) >> World/Billboard [https://sengine.mp-gamer.com/scripting/world/billboard#billboardtarget](https://sengine.mp-gamer.com/scripting/world/billboard#billboardtarget) */
    Target: Entity;
    /** (Property) >> World/Billboard [https://sengine.mp-gamer.com/scripting/world/billboard#billboardoffset](https://sengine.mp-gamer.com/scripting/world/billboard#billboardoffset) */
    Offset: Vector;
    /** (Property) >> World/Billboard [https://sengine.mp-gamer.com/scripting/world/billboard#billboardsprite](https://sengine.mp-gamer.com/scripting/world/billboard#billboardsprite) */
    Sprite: int;
    /** (Property) >> World/Billboard [https://sengine.mp-gamer.com/scripting/world/billboard#billboardtext](https://sengine.mp-gamer.com/scripting/world/billboard#billboardtext) */
    Text: string;
    /** (Property) >> World/Billboard [https://sengine.mp-gamer.com/scripting/world/billboard#billboardprogresstype](https://sengine.mp-gamer.com/scripting/world/billboard#billboardprogresstype) */
    ProgressType: int;
    /** (Property) >> World/Billboard [https://sengine.mp-gamer.com/scripting/world/billboard#billboardprogress](https://sengine.mp-gamer.com/scripting/world/billboard#billboardprogress) */
    Progress: float;
    /** (Property) >> World/Billboard [https://sengine.mp-gamer.com/scripting/world/billboard#billboardmaxprogress](https://sengine.mp-gamer.com/scripting/world/billboard#billboardmaxprogress) */
    MaxProgress: float;
    /** (Property) >> World/Billboard [https://sengine.mp-gamer.com/scripting/world/billboard#billboardlocalinstance](https://sengine.mp-gamer.com/scripting/world/billboard#billboardlocalinstance) */
    LocalInstance: CInstance;
}
/** **(Namespace) >> World/Entity** [https://sengine.mp-gamer.com/scripting/world/entity](https://sengine.mp-gamer.com/scripting/world/entity) */
declare namespace Entity {
}
/** **(Class) >> World/Entity** */
declare class Entity {
    /** **(Public Method) >> World/Entity** [https://sengine.mp-gamer.com/scripting/world/entity#entityisvalid](https://sengine.mp-gamer.com/scripting/world/entity#entityisvalid) */
    IsValid(): bool;
    /** **(Public Method) >> World/Entity** [https://sengine.mp-gamer.com/scripting/world/entity#entitygettype](https://sengine.mp-gamer.com/scripting/world/entity#entitygettype) */
    GetType(): string;
    /** **(Public Method) >> World/Entity** [https://sengine.mp-gamer.com/scripting/world/entity#entitygetinstance](https://sengine.mp-gamer.com/scripting/world/entity#entitygetinstance) */
    GetInstance(): any;
    /** **(Public Method) >> World/Entity** [https://sengine.mp-gamer.com/scripting/world/entity#entityoutlinetargetto](https://sengine.mp-gamer.com/scripting/world/entity#entityoutlinetargetto) */
    OutlineTargetTo(player: Player, color: int = 0): void;
    /** **(Public Method) >> World/Entity** [https://sengine.mp-gamer.com/scripting/world/entity#entityoutlinetargetout](https://sengine.mp-gamer.com/scripting/world/entity#entityoutlinetargetout) */
    OutlineTargetOut(player: Player): void;
    /** **(Public Method) >> World/Entity** [https://sengine.mp-gamer.com/scripting/world/entity#entityoutlinetargetoutall](https://sengine.mp-gamer.com/scripting/world/entity#entityoutlinetargetoutall) */
    OutlineTargetOutAll(): void;
    /** **(Public Method) >> World/Entity** [https://sengine.mp-gamer.com/scripting/world/entity#entitygetoutlinetargetcolor](https://sengine.mp-gamer.com/scripting/world/entity#entitygetoutlinetargetcolor) */
    GetOutlineTargetColor(player: Player): int;
    /** **(Public Method) >> World/Entity** [https://sengine.mp-gamer.com/scripting/world/entity#entityissamegroup](https://sengine.mp-gamer.com/scripting/world/entity#entityissamegroup) */
    IsSameGroup(entity: Entity, isForce: bool = true): bool;
    /** **(Public Method) >> World/Entity** [https://sengine.mp-gamer.com/scripting/world/entity#entityissamegroup](https://sengine.mp-gamer.com/scripting/world/entity#entityissamegroup) */
    IsSameGroup(group: int, isForce: bool = true): bool;
    /** (Property) >> World/Entity [https://sengine.mp-gamer.com/scripting/world/entity#entityentityinstance](https://sengine.mp-gamer.com/scripting/world/entity#entityentityinstance) */
    EntityInstance: CEntity;
    /** (Property) >> World/Entity [https://sengine.mp-gamer.com/scripting/world/entity#entityanydata](https://sengine.mp-gamer.com/scripting/world/entity#entityanydata) */
    AnyData: any;
    /** (Property) >> World/Entity [https://sengine.mp-gamer.com/scripting/world/entity#entityuniqueid](https://sengine.mp-gamer.com/scripting/world/entity#entityuniqueid) */
    UniqueID: int;
    /** (Property) >> World/Entity [https://sengine.mp-gamer.com/scripting/world/entity#entitytag](https://sengine.mp-gamer.com/scripting/world/entity#entitytag) */
    Tag: string;
    /** (Property) >> World/Entity [https://sengine.mp-gamer.com/scripting/world/entity#entityoutline](https://sengine.mp-gamer.com/scripting/world/entity#entityoutline) */
    Outline: bool;
    /** (Property) >> World/Entity [https://sengine.mp-gamer.com/scripting/world/entity#entityoutlinecolor](https://sengine.mp-gamer.com/scripting/world/entity#entityoutlinecolor) */
    OutlineColor: int;
    /** **(Public Method) >> Client/Entity** [https://sengine.mp-gamer.com/scripting/client/entity#entityisvalid](https://sengine.mp-gamer.com/scripting/client/entity#entityisvalid) */
    IsValid(): bool;
    /** **(Public Method) >> Client/Entity** [https://sengine.mp-gamer.com/scripting/client/entity#entitygettype](https://sengine.mp-gamer.com/scripting/client/entity#entitygettype) */
    GetType(): string;
    /** **(Public Method) >> Client/Entity** [https://sengine.mp-gamer.com/scripting/client/entity#entitygetinstance](https://sengine.mp-gamer.com/scripting/client/entity#entitygetinstance) */
    GetInstance(): any;
    /** **(Public Method) >> Client/Entity** [https://sengine.mp-gamer.com/scripting/client/entity#entitydispose](https://sengine.mp-gamer.com/scripting/client/entity#entitydispose) */
    Dispose(): void;
    /** (Property) >> Client/Entity [https://sengine.mp-gamer.com/scripting/client/entity#entityentityinstance](https://sengine.mp-gamer.com/scripting/client/entity#entityentityinstance) */
    EntityInstance: CEntity;
}
/** **(Namespace) >> World/Player** [https://sengine.mp-gamer.com/scripting/world/player](https://sengine.mp-gamer.com/scripting/world/player) */
declare namespace Player {
    /** **(Static Method) >> World/Player** [https://sengine.mp-gamer.com/scripting/world/player#playeronplayerjoin](https://sengine.mp-gamer.com/scripting/world/player#playeronplayerjoin) */
    declare static function OnPlayerJoin(player: Player): void;
    /** **(Static Method) >> World/Player** [https://sengine.mp-gamer.com/scripting/world/player#playeronplayercomplete](https://sengine.mp-gamer.com/scripting/world/player#playeronplayercomplete) */
    declare static function OnPlayerComplete(player: Player): void;
    /** **(Static Method) >> World/Player** [https://sengine.mp-gamer.com/scripting/world/player#playeronplayerpart](https://sengine.mp-gamer.com/scripting/world/player#playeronplayerpart) */
    declare static function OnPlayerPart(player: Player, reason: int): void;
    /** **(Static Method) >> World/Player** [https://sengine.mp-gamer.com/scripting/world/player#playeronplayerchat](https://sengine.mp-gamer.com/scripting/world/player#playeronplayerchat) */
    declare static function OnPlayerChat(player: Player, text: string): bool;
    /** **(Static Method) >> World/Player** [https://sengine.mp-gamer.com/scripting/world/player#playeronplayerstreamdata](https://sengine.mp-gamer.com/scripting/world/player#playeronplayerstreamdata) */
    declare static function OnPlayerStreamData(player: Player, number: float, data: string): void;
    /** **(Static Method) >> World/Player** [https://sengine.mp-gamer.com/scripting/world/player#playeronplayercommand](https://sengine.mp-gamer.com/scripting/world/player#playeronplayercommand) */
    declare static function OnPlayerCommand(player: Player, cmd: string, arg: string): void;
    /** **(Static Method) >> World/Player** [https://sengine.mp-gamer.com/scripting/world/player#playeronplayertypingchange](https://sengine.mp-gamer.com/scripting/world/player#playeronplayertypingchange) */
    declare static function OnPlayerTypingChange(player: Player, state: bool): void;
    /** **(Static Method) >> World/Player** [https://sengine.mp-gamer.com/scripting/world/player#playeronplayerentitylogin](https://sengine.mp-gamer.com/scripting/world/player#playeronplayerentitylogin) */
    declare static function OnPlayerEntityLogin(player: Player, entity: Character): void;
    /** **(Static Method) >> World/Player** [https://sengine.mp-gamer.com/scripting/world/player#playeronplayerentitylogout](https://sengine.mp-gamer.com/scripting/world/player#playeronplayerentitylogout) */
    declare static function OnPlayerEntityLogout(player: Player, entity: Character): void;
    /** **(Static Method) >> World/Player** [https://sengine.mp-gamer.com/scripting/world/player#playeronplayerkeydown](https://sengine.mp-gamer.com/scripting/world/player#playeronplayerkeydown) */
    declare static function OnPlayerKeyDown(player: Player, keyTag: string): void;
    /** **(Static Method) >> World/Player** [https://sengine.mp-gamer.com/scripting/world/player#playeronplayerkeyup](https://sengine.mp-gamer.com/scripting/world/player#playeronplayerkeyup) */
    declare static function OnPlayerKeyUp(player: Player, keyTag: string): void;
    /** **(Static Method) >> World/Player** [https://sengine.mp-gamer.com/scripting/world/player#playeronplayernativekeydown](https://sengine.mp-gamer.com/scripting/world/player#playeronplayernativekeydown) */
    declare static function OnPlayerNativeKeyDown(player: Player, keyTag: string): void;
    /** **(Static Method) >> World/Player** [https://sengine.mp-gamer.com/scripting/world/player#playeronplayernativekeyup](https://sengine.mp-gamer.com/scripting/world/player#playeronplayernativekeyup) */
    declare static function OnPlayerNativeKeyUp(player: Player, keyTag: string): void;
    /** **(Static Method) >> World/Player** [https://sengine.mp-gamer.com/scripting/world/player#playerfind](https://sengine.mp-gamer.com/scripting/world/player#playerfind) */
    declare static function Find(id: int): Player;
    /** **(Static Method) >> World/Player** [https://sengine.mp-gamer.com/scripting/world/player#playersearch](https://sengine.mp-gamer.com/scripting/world/player#playersearch) */
    declare static function Search(any: string): Player;
    /** **(Static Method) >> World/Player** [https://sengine.mp-gamer.com/scripting/world/player#playerfindbyuuid](https://sengine.mp-gamer.com/scripting/world/player#playerfindbyuuid) */
    declare static function FindByUUID(uuid: string): Player;
    /** **(Static Method) >> World/Player** [https://sengine.mp-gamer.com/scripting/world/player#playergetcount](https://sengine.mp-gamer.com/scripting/world/player#playergetcount) */
    declare static function GetCount(): int;
    /** **(Static Method) >> World/Player** [https://sengine.mp-gamer.com/scripting/world/player#playerget](https://sengine.mp-gamer.com/scripting/world/player#playerget) */
    declare static function Get(index: int): Player;
    /** **(Static Method) >> World/Player** [https://sengine.mp-gamer.com/scripting/world/player#playerunban](https://sengine.mp-gamer.com/scripting/world/player#playerunban) */
    declare static function Unban(name: string): void;
    /** **(Static Method) >> World/Player** [https://sengine.mp-gamer.com/scripting/world/player#playerunbanall](https://sengine.mp-gamer.com/scripting/world/player#playerunbanall) */
    declare static function UnbanAll(): void;
    /** **(Static Method) >> Client/Player** [https://sengine.mp-gamer.com/scripting/client/player#playeronplayerentitylogin](https://sengine.mp-gamer.com/scripting/client/player#playeronplayerentitylogin) */
    declare static function OnPlayerEntityLogin(player: Player, entity: Character): void;
    /** **(Static Method) >> Client/Player** [https://sengine.mp-gamer.com/scripting/client/player#playeronplayerentitylogout](https://sengine.mp-gamer.com/scripting/client/player#playeronplayerentitylogout) */
    declare static function OnPlayerEntityLogout(player: Player, entity: Character): void;
    /** **(Static Method) >> Client/Player** [https://sengine.mp-gamer.com/scripting/client/player#playerfind](https://sengine.mp-gamer.com/scripting/client/player#playerfind) */
    declare static function Find(id: int): Player;
    /** **(Static Method) >> Client/Player** [https://sengine.mp-gamer.com/scripting/client/player#playergetcount](https://sengine.mp-gamer.com/scripting/client/player#playergetcount) */
    declare static function GetCount(): int;
    /** **(Static Method) >> Client/Player** [https://sengine.mp-gamer.com/scripting/client/player#playerget](https://sengine.mp-gamer.com/scripting/client/player#playerget) */
    declare static function Get(index: int): Player;
    /** **(Static Property) >> Client/Player** [https://sengine.mp-gamer.com/scripting/client/player#playerlocal](https://sengine.mp-gamer.com/scripting/client/player#playerlocal) */
    declare static let Local: Player;
}
/** **(Class) >> World/Player** */
declare class Player {
    /** **(Public Method) >> World/Player** [https://sengine.mp-gamer.com/scripting/world/player#playersetentity](https://sengine.mp-gamer.com/scripting/world/player#playersetentity) */
    SetEntity(character: Character, isBind: bool = true): bool;
    /** **(Public Method) >> World/Player** [https://sengine.mp-gamer.com/scripting/world/player#playerkick](https://sengine.mp-gamer.com/scripting/world/player#playerkick) */
    Kick(reason: string = Kicked): void;
    /** **(Public Method) >> World/Player** [https://sengine.mp-gamer.com/scripting/world/player#playerban](https://sengine.mp-gamer.com/scripting/world/player#playerban) */
    Ban(reason: string = Banned): void;
    /** **(Public Method) >> World/Player** [https://sengine.mp-gamer.com/scripting/world/player#playercreatenativemenu](https://sengine.mp-gamer.com/scripting/world/player#playercreatenativemenu) */
    CreateNativeMenu(data: any): void;
    /** **(Public Method) >> World/Player** [https://sengine.mp-gamer.com/scripting/world/player#playerdestroynativemenu](https://sengine.mp-gamer.com/scripting/world/player#playerdestroynativemenu) */
    DestroyNativeMenu(): void;
    /** **(Public Method) >> World/Player** [https://sengine.mp-gamer.com/scripting/world/player#playersetnativemenutext](https://sengine.mp-gamer.com/scripting/world/player#playersetnativemenutext) */
    SetNativeMenuText(index: int, text: string): void;
    /** **(Public Method) >> World/Player** [https://sengine.mp-gamer.com/scripting/world/player#playersetnativemenutext](https://sengine.mp-gamer.com/scripting/world/player#playersetnativemenutext) */
    SetNativeMenuText(tag: string, text: string): void;
    /** **(Public Method) >> World/Player** [https://sengine.mp-gamer.com/scripting/world/player#playerfindnativemenuindex](https://sengine.mp-gamer.com/scripting/world/player#playerfindnativemenuindex) */
    FindNativeMenuIndex(tag: string): int;
    /** **(Public Method) >> World/Player** [https://sengine.mp-gamer.com/scripting/world/player#player_emitnativemenuevent](https://sengine.mp-gamer.com/scripting/world/player#player_emitnativemenuevent) */
    _EmitNativeMenuEvent(index: int, type: int, param: any = null): void;
    /** **(Public Method) >> World/Player** [https://sengine.mp-gamer.com/scripting/world/player#playermessage](https://sengine.mp-gamer.com/scripting/world/player#playermessage) */
    Message(text: any): void;
    /** **(Public Method) >> World/Player** [https://sengine.mp-gamer.com/scripting/world/player#playerannounce](https://sengine.mp-gamer.com/scripting/world/player#playerannounce) */
    Announce(text: any, type: int = 0, time: float = 6): void;
    /** **(Public Method) >> World/Player** [https://sengine.mp-gamer.com/scripting/world/player#playersubtitle](https://sengine.mp-gamer.com/scripting/world/player#playersubtitle) */
    Subtitle(text: any): void;
    /** **(Public Method) >> World/Player** [https://sengine.mp-gamer.com/scripting/world/player#playersenddata](https://sengine.mp-gamer.com/scripting/world/player#playersenddata) */
    SendData(number: float, data: string): void;
    /** **(Public Method) >> World/Player** [https://sengine.mp-gamer.com/scripting/world/player#playerstorydialog](https://sengine.mp-gamer.com/scripting/world/player#playerstorydialog) */
    StoryDialog(title: string, text: string, avatar: int = -1, sound: int = -1, data: any = null, onComplete: Action = null): void;
    /** **(Public Method) >> World/Player** [https://sengine.mp-gamer.com/scripting/world/player#playernextstorydialog](https://sengine.mp-gamer.com/scripting/world/player#playernextstorydialog) */
    NextStoryDialog(): void;
    /** **(Public Method) >> World/Player** [https://sengine.mp-gamer.com/scripting/world/player#playerclearstorydialog](https://sengine.mp-gamer.com/scripting/world/player#playerclearstorydialog) */
    ClearStoryDialog(): void;
    /** **(Public Method) >> World/Player** [https://sengine.mp-gamer.com/scripting/world/player#playerplaysound](https://sengine.mp-gamer.com/scripting/world/player#playerplaysound) */
    PlaySound(audioID: int, loop: bool = false, volume: float = 1, tag: string = null): string;
    /** **(Public Method) >> World/Player** [https://sengine.mp-gamer.com/scripting/world/player#playerplay3dsound](https://sengine.mp-gamer.com/scripting/world/player#playerplay3dsound) */
    Play3DSound(audioID: int, pos: Vector, radius: float = 80, loop: bool = false, volume: float = 1, tag: string = null): string;
    /** **(Public Method) >> World/Player** [https://sengine.mp-gamer.com/scripting/world/player#playerstopsound](https://sengine.mp-gamer.com/scripting/world/player#playerstopsound) */
    StopSound(uuid: string, fadeTime: float = 0): void;
    /** **(Public Method) >> World/Player** [https://sengine.mp-gamer.com/scripting/world/player#playerplaymusic](https://sengine.mp-gamer.com/scripting/world/player#playerplaymusic) */
    PlayMusic(audioID: int, loop: bool = false, fadeTime: float = 3): void;
    /** **(Public Method) >> World/Player** [https://sengine.mp-gamer.com/scripting/world/player#playerplay3dmusic](https://sengine.mp-gamer.com/scripting/world/player#playerplay3dmusic) */
    Play3DMusic(audioID: int, pos: Vector, radius: float = 80, loop: bool = false, fadeTime: float = 3): void;
    /** **(Public Method) >> World/Player** [https://sengine.mp-gamer.com/scripting/world/player#playerpausemusic](https://sengine.mp-gamer.com/scripting/world/player#playerpausemusic) */
    PauseMusic(fadeTime: float = 3): void;
    /** **(Public Method) >> World/Player** [https://sengine.mp-gamer.com/scripting/world/player#playerresumemusic](https://sengine.mp-gamer.com/scripting/world/player#playerresumemusic) */
    ResumeMusic(fadeTime: float = 3): void;
    /** **(Public Method) >> World/Player** [https://sengine.mp-gamer.com/scripting/world/player#playerstopmusic](https://sengine.mp-gamer.com/scripting/world/player#playerstopmusic) */
    StopMusic(fadeTime: float = 3): void;
    /** **(Public Method) >> World/Player** [https://sengine.mp-gamer.com/scripting/world/player#playerplaynatural](https://sengine.mp-gamer.com/scripting/world/player#playerplaynatural) */
    PlayNatural(audioID: int, channel: int, loop: bool = true, fadeTime: float = 3): void;
    /** **(Public Method) >> World/Player** [https://sengine.mp-gamer.com/scripting/world/player#playerstopnatural](https://sengine.mp-gamer.com/scripting/world/player#playerstopnatural) */
    StopNatural(channel: int, fadeTime: float = 3): void;
    /** **(Public Method) >> World/Player** [https://sengine.mp-gamer.com/scripting/world/player#playerstopallnatural](https://sengine.mp-gamer.com/scripting/world/player#playerstopallnatural) */
    StopAllNatural(fadeTime: float = 3): void;
    /** **(Public Method) >> World/Player** [https://sengine.mp-gamer.com/scripting/world/player#playerfocuscamera](https://sengine.mp-gamer.com/scripting/world/player#playerfocuscamera) */
    FocusCamera(): void;
    /** **(Public Method) >> World/Player** [https://sengine.mp-gamer.com/scripting/world/player#playerbindkeypresser](https://sengine.mp-gamer.com/scripting/world/player#playerbindkeypresser) */
    BindKeyPresser(target: any = null): void;
    /** **(Public Method) >> World/Player** [https://sengine.mp-gamer.com/scripting/world/player#playeraddkeypresser](https://sengine.mp-gamer.com/scripting/world/player#playeraddkeypresser) */
    AddKeyPresser(index: int, keyCode: string, text: string, onPress: Action = null): void;
    /** **(Public Method) >> World/Player** [https://sengine.mp-gamer.com/scripting/world/player#playerremovekeypresser](https://sengine.mp-gamer.com/scripting/world/player#playerremovekeypresser) */
    RemoveKeyPresser(index: int): void;
    /** **(Public Method) >> World/Player** [https://sengine.mp-gamer.com/scripting/world/player#playerexistkeypresser](https://sengine.mp-gamer.com/scripting/world/player#playerexistkeypresser) */
    ExistKeyPresser(index: int): bool;
    /** **(Public Method) >> World/Player** [https://sengine.mp-gamer.com/scripting/world/player#playerclearkeypressers](https://sengine.mp-gamer.com/scripting/world/player#playerclearkeypressers) */
    ClearKeyPressers(): void;
    /** **(Public Method) >> World/Player** [https://sengine.mp-gamer.com/scripting/world/player#playeraddguider](https://sengine.mp-gamer.com/scripting/world/player#playeraddguider) */
    AddGuider(index: int, target: any, autoDestroy: bool = false): void;
    /** **(Public Method) >> World/Player** [https://sengine.mp-gamer.com/scripting/world/player#playerremoveguider](https://sengine.mp-gamer.com/scripting/world/player#playerremoveguider) */
    RemoveGuider(index: int): void;
    /** **(Public Method) >> World/Player** [https://sengine.mp-gamer.com/scripting/world/player#playerexistguider](https://sengine.mp-gamer.com/scripting/world/player#playerexistguider) */
    ExistGuider(index: int): bool;
    /** **(Public Method) >> World/Player** [https://sengine.mp-gamer.com/scripting/world/player#playersetcinematicborder](https://sengine.mp-gamer.com/scripting/world/player#playersetcinematicborder) */
    SetCinematicBorder(active: bool, time: float = 1): void;
    /** **(Public Method) >> World/Player** [https://sengine.mp-gamer.com/scripting/world/player#playergetcinematicborder](https://sengine.mp-gamer.com/scripting/world/player#playergetcinematicborder) */
    GetCinematicBorder(): bool;
    /** **(Public Method) >> World/Player** [https://sengine.mp-gamer.com/scripting/world/player#playersetcamerapos](https://sengine.mp-gamer.com/scripting/world/player#playersetcamerapos) */
    SetCameraPos(): bool;
    /** **(Public Method) >> World/Player** [https://sengine.mp-gamer.com/scripting/world/player#playergetcamerapos](https://sengine.mp-gamer.com/scripting/world/player#playergetcamerapos) */
    GetCameraPos(): bool;
    /** **(Public Method) >> World/Player** [https://sengine.mp-gamer.com/scripting/world/player#playersetcameratarget](https://sengine.mp-gamer.com/scripting/world/player#playersetcameratarget) */
    SetCameraTarget(): bool;
    /** **(Public Method) >> World/Player** [https://sengine.mp-gamer.com/scripting/world/player#playergetcameratarget](https://sengine.mp-gamer.com/scripting/world/player#playergetcameratarget) */
    GetCameraTarget(): bool;
    /** **(Public Method) >> World/Player** [https://sengine.mp-gamer.com/scripting/world/player#playersetcameratargetpos](https://sengine.mp-gamer.com/scripting/world/player#playersetcameratargetpos) */
    SetCameraTargetPos(): bool;
    /** **(Public Method) >> World/Player** [https://sengine.mp-gamer.com/scripting/world/player#playergetcameratargetpos](https://sengine.mp-gamer.com/scripting/world/player#playergetcameratargetpos) */
    GetCameraTargetPos(): bool;
    /** (Property) >> World/Player [https://sengine.mp-gamer.com/scripting/world/player#playerid](https://sengine.mp-gamer.com/scripting/world/player#playerid) */
    ID: int;
    /** (Property) >> World/Player [https://sengine.mp-gamer.com/scripting/world/player#playeruuid](https://sengine.mp-gamer.com/scripting/world/player#playeruuid) */
    UUID: string;
    /** (Property) >> World/Player [https://sengine.mp-gamer.com/scripting/world/player#playername](https://sengine.mp-gamer.com/scripting/world/player#playername) */
    Name: string;
    /** (Property) >> World/Player [https://sengine.mp-gamer.com/scripting/world/player#playeraddress](https://sengine.mp-gamer.com/scripting/world/player#playeraddress) */
    Address: string;
    /** (Property) >> World/Player [https://sengine.mp-gamer.com/scripting/world/player#playeruserdata](https://sengine.mp-gamer.com/scripting/world/player#playeruserdata) */
    UserData: string;
    /** (Property) >> World/Player [https://sengine.mp-gamer.com/scripting/world/player#playerinstance](https://sengine.mp-gamer.com/scripting/world/player#playerinstance) */
    Instance: CPlayer;
    /** (Property) >> World/Player [https://sengine.mp-gamer.com/scripting/world/player#playerentity](https://sengine.mp-gamer.com/scripting/world/player#playerentity) */
    Entity: Character;
    /** (Property) >> World/Player [https://sengine.mp-gamer.com/scripting/world/player#playercharacter](https://sengine.mp-gamer.com/scripting/world/player#playercharacter) */
    Character: Character;
    /** (Property) >> World/Player [https://sengine.mp-gamer.com/scripting/world/player#playerchara](https://sengine.mp-gamer.com/scripting/world/player#playerchara) */
    Chara: Character;
    /** (Property) >> World/Player [https://sengine.mp-gamer.com/scripting/world/player#playerworld](https://sengine.mp-gamer.com/scripting/world/player#playerworld) */
    World: int;
    /** (Property) >> World/Player [https://sengine.mp-gamer.com/scripting/world/player#playeruniqueworld](https://sengine.mp-gamer.com/scripting/world/player#playeruniqueworld) */
    UniqueWorld: int;
    /** (Property) >> World/Player [https://sengine.mp-gamer.com/scripting/world/player#playercolor](https://sengine.mp-gamer.com/scripting/world/player#playercolor) */
    Color: Color;
    /** (Property) >> World/Player [https://sengine.mp-gamer.com/scripting/world/player#playergroup](https://sengine.mp-gamer.com/scripting/world/player#playergroup) */
    Group: int;
    /** (Property) >> World/Player [https://sengine.mp-gamer.com/scripting/world/player#playerisbindentity](https://sengine.mp-gamer.com/scripting/world/player#playerisbindentity) */
    IsBindEntity: bool;
    /** (Property) >> World/Player [https://sengine.mp-gamer.com/scripting/world/player#playerpos](https://sengine.mp-gamer.com/scripting/world/player#playerpos) */
    Pos: Vector;
    /** (Property) >> World/Player [https://sengine.mp-gamer.com/scripting/world/player#playerfocuspos](https://sengine.mp-gamer.com/scripting/world/player#playerfocuspos) */
    FocusPos: Vector;
    /** (Property) >> World/Player [https://sengine.mp-gamer.com/scripting/world/player#playeristyping](https://sengine.mp-gamer.com/scripting/world/player#playeristyping) */
    IsTyping: bool;
    /** (Property) >> World/Player [https://sengine.mp-gamer.com/scripting/world/player#playercamerafreemode](https://sengine.mp-gamer.com/scripting/world/player#playercamerafreemode) */
    CameraFreeMode: bool;
    /** (Property) >> World/Player [https://sengine.mp-gamer.com/scripting/world/player#playercameraslowmode](https://sengine.mp-gamer.com/scripting/world/player#playercameraslowmode) */
    CameraSlowMode: bool;
    /** (Property) >> Client/Player [https://sengine.mp-gamer.com/scripting/client/player#playerid](https://sengine.mp-gamer.com/scripting/client/player#playerid) */
    ID: int;
    /** (Property) >> Client/Player [https://sengine.mp-gamer.com/scripting/client/player#playerislocal](https://sengine.mp-gamer.com/scripting/client/player#playerislocal) */
    IsLocal: bool;
    /** (Property) >> Client/Player [https://sengine.mp-gamer.com/scripting/client/player#playerfocuspos](https://sengine.mp-gamer.com/scripting/client/player#playerfocuspos) */
    FocusPos: Vector;
    /** (Property) >> Client/Player [https://sengine.mp-gamer.com/scripting/client/player#playerraycastpos](https://sengine.mp-gamer.com/scripting/client/player#playerraycastpos) */
    RaycastPos: Vector;
}
/** **(Namespace) >> World/Character** [https://sengine.mp-gamer.com/scripting/world/character](https://sengine.mp-gamer.com/scripting/world/character) */
declare namespace Character {
    /** **(Static Method) >> World/Character** [https://sengine.mp-gamer.com/scripting/world/character#characteroncharacterspawn](https://sengine.mp-gamer.com/scripting/world/character#characteroncharacterspawn) */
    declare static function OnCharacterSpawn(character: Character, isCreated: bool): void;
    /** **(Static Method) >> World/Character** [https://sengine.mp-gamer.com/scripting/world/character#characteroncharacterdeath](https://sengine.mp-gamer.com/scripting/world/character#characteroncharacterdeath) */
    declare static function OnCharacterDeath(character: Character, reason: int): void;
    /** **(Static Method) >> World/Character** [https://sengine.mp-gamer.com/scripting/world/character#characteroncharacterkill](https://sengine.mp-gamer.com/scripting/world/character#characteroncharacterkill) */
    declare static function OnCharacterKill(killer: Character, character: Character, reason: int): void;
    /** **(Static Method) >> World/Character** [https://sengine.mp-gamer.com/scripting/world/character#characteroncharactertriggerentered](https://sengine.mp-gamer.com/scripting/world/character#characteroncharactertriggerentered) */
    declare static function OnCharacterTriggerEntered(character: Character, entity: Entity): void;
    /** **(Static Method) >> World/Character** [https://sengine.mp-gamer.com/scripting/world/character#characteroncharactertriggerexited](https://sengine.mp-gamer.com/scripting/world/character#characteroncharactertriggerexited) */
    declare static function OnCharacterTriggerExited(character: Character, entity: Entity): void;
    /** **(Static Method) >> World/Character** [https://sengine.mp-gamer.com/scripting/world/character#characteroncharacterpropchange](https://sengine.mp-gamer.com/scripting/world/character#characteroncharacterpropchange) */
    declare static function OnCharacterPropChange(character: Character, oldProp: Prop, newProp: Prop): void;
    /** **(Static Method) >> World/Character** [https://sengine.mp-gamer.com/scripting/world/character#characteroncharacterpropcountchange](https://sengine.mp-gamer.com/scripting/world/character#characteroncharacterpropcountchange) */
    declare static function OnCharacterPropCountChange(character: Character, oldCount: int, newCount: int): void;
    /** **(Static Method) >> World/Character** [https://sengine.mp-gamer.com/scripting/world/character#characteroncharacterpropfocus](https://sengine.mp-gamer.com/scripting/world/character#characteroncharacterpropfocus) */
    declare static function OnCharacterPropFocus(character: Character, prop: Prop, state: bool): void;
    /** **(Static Method) >> World/Character** [https://sengine.mp-gamer.com/scripting/world/character#characteroncharacterpropactionbefore](https://sengine.mp-gamer.com/scripting/world/character#characteroncharacterpropactionbefore) */
    declare static function OnCharacterPropActionBefore(character: Character, prop: Prop): bool;
    /** **(Static Method) >> World/Character** [https://sengine.mp-gamer.com/scripting/world/character#characteroncharacterpropaction](https://sengine.mp-gamer.com/scripting/world/character#characteroncharacterpropaction) */
    declare static function OnCharacterPropAction(character: Character, prop: Prop): void;
    /** **(Static Method) >> World/Character** [https://sengine.mp-gamer.com/scripting/world/character#characteroncharacteroutground](https://sengine.mp-gamer.com/scripting/world/character#characteroncharacteroutground) */
    declare static function OnCharacterOutGround(character: Character): void;
    /** **(Static Method) >> World/Character** [https://sengine.mp-gamer.com/scripting/world/character#characteroncharacterfallground](https://sengine.mp-gamer.com/scripting/world/character#characteroncharacterfallground) */
    declare static function OnCharacterFallGround(character: Character): void;
    /** **(Static Method) >> World/Character** [https://sengine.mp-gamer.com/scripting/world/character#characteroncharacterdamage](https://sengine.mp-gamer.com/scripting/world/character#characteroncharacterdamage) */
    declare static function OnCharacterDamage(character: Character, damage: int, from: Entity, type: int, isImmunity: bool): void;
    /** **(Static Method) >> World/Character** [https://sengine.mp-gamer.com/scripting/world/character#characteroncharacterhealthchange](https://sengine.mp-gamer.com/scripting/world/character#characteroncharacterhealthchange) */
    declare static function OnCharacterHealthChange(character: Character, oldHealth: int, newHealth: int): void;
    /** **(Static Method) >> World/Character** [https://sengine.mp-gamer.com/scripting/world/character#characteroncharacterarmourchange](https://sengine.mp-gamer.com/scripting/world/character#characteroncharacterarmourchange) */
    declare static function OnCharacterArmourChange(character: Character, oldArmour: int, newArmour: int): void;
    /** **(Static Method) >> World/Character** [https://sengine.mp-gamer.com/scripting/world/character#characteroncharacterbasestate](https://sengine.mp-gamer.com/scripting/world/character#characteroncharacterbasestate) */
    declare static function OnCharacterBaseState(character: Character, baseState: int): void;
    /** **(Static Method) >> World/Character** [https://sengine.mp-gamer.com/scripting/world/character#characteroncharacterfrozenstate](https://sengine.mp-gamer.com/scripting/world/character#characteroncharacterfrozenstate) */
    declare static function OnCharacterFrozenState(character: Character, isFrozen: bool): void;
    /** **(Static Method) >> World/Character** [https://sengine.mp-gamer.com/scripting/world/character#characteroncharacterswimmingstate](https://sengine.mp-gamer.com/scripting/world/character#characteroncharacterswimmingstate) */
    declare static function OnCharacterSwimmingState(character: Character, isSwimming: bool): void;
    /** **(Static Method) >> World/Character** [https://sengine.mp-gamer.com/scripting/world/character#characteroncharacteranimplayed](https://sengine.mp-gamer.com/scripting/world/character#characteroncharacteranimplayed) */
    declare static function OnCharacterAnimPlayed(character: Character, anim: int, loop: bool): void;
    /** **(Static Method) >> World/Character** [https://sengine.mp-gamer.com/scripting/world/character#characteroncharacteranimstopped](https://sengine.mp-gamer.com/scripting/world/character#characteroncharacteranimstopped) */
    declare static function OnCharacterAnimStopped(character: Character, anim: int, loop: bool): void;
    /** **(Static Method) >> World/Character** [https://sengine.mp-gamer.com/scripting/world/character#charactercreate](https://sengine.mp-gamer.com/scripting/world/character#charactercreate) */
    declare static function Create(type: int, pos: Vector, angle: float = 0, skin: int = -1): Character;
    /** **(Static Method) >> World/Character** [https://sengine.mp-gamer.com/scripting/world/character#characterfind](https://sengine.mp-gamer.com/scripting/world/character#characterfind) */
    declare static function Find(id: int): Character;
    /** **(Static Method) >> World/Character** [https://sengine.mp-gamer.com/scripting/world/character#characterfindbyuuid](https://sengine.mp-gamer.com/scripting/world/character#characterfindbyuuid) */
    declare static function FindByUUID(uuid: string): Character;
    /** **(Static Method) >> World/Character** [https://sengine.mp-gamer.com/scripting/world/character#charactergetcount](https://sengine.mp-gamer.com/scripting/world/character#charactergetcount) */
    declare static function GetCount(): int;
    /** **(Static Method) >> World/Character** [https://sengine.mp-gamer.com/scripting/world/character#characterget](https://sengine.mp-gamer.com/scripting/world/character#characterget) */
    declare static function Get(index: int): Character;
    /** **(Static Method) >> Client/Character** [https://sengine.mp-gamer.com/scripting/client/character#characteroncharacterentervehicle](https://sengine.mp-gamer.com/scripting/client/character#characteroncharacterentervehicle) */
    declare static function OnCharacterEnterVehicle(character: Character, vehicle: Vehicle, seat: int): void;
    /** **(Static Method) >> Client/Character** [https://sengine.mp-gamer.com/scripting/client/character#characteroncharacterexitvehicle](https://sengine.mp-gamer.com/scripting/client/character#characteroncharacterexitvehicle) */
    declare static function OnCharacterExitVehicle(character: Character, vehicle: Vehicle, seat: int): void;
    /** **(Static Method) >> Client/Character** [https://sengine.mp-gamer.com/scripting/client/character#characterfind](https://sengine.mp-gamer.com/scripting/client/character#characterfind) */
    declare static function Find(id: int): Character;
    /** **(Static Method) >> Client/Character** [https://sengine.mp-gamer.com/scripting/client/character#characterfindbyuuid](https://sengine.mp-gamer.com/scripting/client/character#characterfindbyuuid) */
    declare static function FindByUUID(uuid: string): Character;
    /** **(Static Method) >> Client/Character** [https://sengine.mp-gamer.com/scripting/client/character#charactergetcount](https://sengine.mp-gamer.com/scripting/client/character#charactergetcount) */
    declare static function GetCount(): int;
    /** **(Static Method) >> Client/Character** [https://sengine.mp-gamer.com/scripting/client/character#characterget](https://sengine.mp-gamer.com/scripting/client/character#characterget) */
    declare static function Get(index: int): Character;
}
/** **(Class) >> World/Character** */
declare class Character {
    /** **(Public Method) >> World/Character** [https://sengine.mp-gamer.com/scripting/world/character#characterremove](https://sengine.mp-gamer.com/scripting/world/character#characterremove) */
    Remove(): void;
    /** **(Public Method) >> World/Character** [https://sengine.mp-gamer.com/scripting/world/character#characterdamage](https://sengine.mp-gamer.com/scripting/world/character#characterdamage) */
    Damage(damage: int, from: Entity = null, reason: int = 0): void;
    /** **(Public Method) >> World/Character** [https://sengine.mp-gamer.com/scripting/world/character#charactereject](https://sengine.mp-gamer.com/scripting/world/character#charactereject) */
    Eject(): void;
    /** **(Public Method) >> World/Character** [https://sengine.mp-gamer.com/scripting/world/character#characteraction](https://sengine.mp-gamer.com/scripting/world/character#characteraction) */
    Action(): void;
    /** **(Public Method) >> World/Character** [https://sengine.mp-gamer.com/scripting/world/character#characteraddforce](https://sengine.mp-gamer.com/scripting/world/character#characteraddforce) */
    AddForce(force: Vector, isLocal: bool = true): void;
    /** **(Public Method) >> World/Character** [https://sengine.mp-gamer.com/scripting/world/character#characterentervehicle](https://sengine.mp-gamer.com/scripting/world/character#characterentervehicle) */
    EnterVehicle(vehicle: Vehicle): bool;
    /** **(Public Method) >> World/Character** [https://sengine.mp-gamer.com/scripting/world/character#charactersetvehicle](https://sengine.mp-gamer.com/scripting/world/character#charactersetvehicle) */
    SetVehicle(vehicle: Vehicle, slot: int): bool;
    /** **(Public Method) >> World/Character** [https://sengine.mp-gamer.com/scripting/world/character#charactersetextend](https://sengine.mp-gamer.com/scripting/world/character#charactersetextend) */
    SetExtend(index: int, extend: int): void;
    /** **(Public Method) >> World/Character** [https://sengine.mp-gamer.com/scripting/world/character#charactergetextend](https://sengine.mp-gamer.com/scripting/world/character#charactergetextend) */
    GetExtend(index: int): int;
    /** **(Public Method) >> World/Character** [https://sengine.mp-gamer.com/scripting/world/character#charactersetnodeextend](https://sengine.mp-gamer.com/scripting/world/character#charactersetnodeextend) */
    SetNodeExtend(index: int, extendModel: Model): void;
    /** **(Public Method) >> World/Character** [https://sengine.mp-gamer.com/scripting/world/character#characterremovenodeextend](https://sengine.mp-gamer.com/scripting/world/character#characterremovenodeextend) */
    RemoveNodeExtend(index: int): void;
    /** **(Public Method) >> World/Character** [https://sengine.mp-gamer.com/scripting/world/character#charactergetnodeextend](https://sengine.mp-gamer.com/scripting/world/character#charactergetnodeextend) */
    GetNodeExtend(index: int): Model;
    /** **(Public Method) >> World/Character** [https://sengine.mp-gamer.com/scripting/world/character#characterresetprop](https://sengine.mp-gamer.com/scripting/world/character#characterresetprop) */
    ResetProp(): void;
    /** **(Public Method) >> World/Character** [https://sengine.mp-gamer.com/scripting/world/character#charactersetprop](https://sengine.mp-gamer.com/scripting/world/character#charactersetprop) */
    SetProp(index: int, id: int, amount: int = 1, data: any = null): void;
    /** **(Public Method) >> World/Character** [https://sengine.mp-gamer.com/scripting/world/character#characteraddprop](https://sengine.mp-gamer.com/scripting/world/character#characteraddprop) */
    AddProp(id: int, amount: int = 1, data: any = null, forceAll: bool = false, autoSize: bool = false): int;
    /** **(Public Method) >> World/Character** [https://sengine.mp-gamer.com/scripting/world/character#characterappendprop](https://sengine.mp-gamer.com/scripting/world/character#characterappendprop) */
    AppendProp(id: int, amount: int = 1, data: any = null, autoSize: bool = false): int;
    /** **(Public Method) >> World/Character** [https://sengine.mp-gamer.com/scripting/world/character#charactergetprop](https://sengine.mp-gamer.com/scripting/world/character#charactergetprop) */
    GetProp(index: int): Prop;
    /** **(Public Method) >> World/Character** [https://sengine.mp-gamer.com/scripting/world/character#characterrecover](https://sengine.mp-gamer.com/scripting/world/character#characterrecover) */
    Recover(): void;
    /** **(Public Method) >> World/Character** [https://sengine.mp-gamer.com/scripting/world/character#characterrespawn](https://sengine.mp-gamer.com/scripting/world/character#characterrespawn) */
    Respawn(): void;
    /** **(Public Method) >> World/Character** [https://sengine.mp-gamer.com/scripting/world/character#characterkill](https://sengine.mp-gamer.com/scripting/world/character#characterkill) */
    Kill(): void;
    /** **(Public Method) >> World/Character** [https://sengine.mp-gamer.com/scripting/world/character#charactergettriggercount](https://sengine.mp-gamer.com/scripting/world/character#charactergettriggercount) */
    GetTriggerCount(): int;
    /** **(Public Method) >> World/Character** [https://sengine.mp-gamer.com/scripting/world/character#charactergettrigger](https://sengine.mp-gamer.com/scripting/world/character#charactergettrigger) */
    GetTrigger(index: int): any;
    /** **(Public Method) >> World/Character** [https://sengine.mp-gamer.com/scripting/world/character#charactersetanim](https://sengine.mp-gamer.com/scripting/world/character#charactersetanim) */
    SetAnim(anim: int = -1, loop: bool = false): void;
    /** (Property) >> World/Character [https://sengine.mp-gamer.com/scripting/world/character#characterid](https://sengine.mp-gamer.com/scripting/world/character#characterid) */
    ID: int;
    /** (Property) >> World/Character [https://sengine.mp-gamer.com/scripting/world/character#charactertype](https://sengine.mp-gamer.com/scripting/world/character#charactertype) */
    Type: int;
    /** (Property) >> World/Character [https://sengine.mp-gamer.com/scripting/world/character#charactername](https://sengine.mp-gamer.com/scripting/world/character#charactername) */
    Name: string;
    /** (Property) >> World/Character [https://sengine.mp-gamer.com/scripting/world/character#characterworld](https://sengine.mp-gamer.com/scripting/world/character#characterworld) */
    World: int;
    /** (Property) >> World/Character [https://sengine.mp-gamer.com/scripting/world/character#characterpos](https://sengine.mp-gamer.com/scripting/world/character#characterpos) */
    Pos: Vector;
    /** (Property) >> World/Character [https://sengine.mp-gamer.com/scripting/world/character#characteralpha](https://sengine.mp-gamer.com/scripting/world/character#characteralpha) */
    Alpha: int;
    /** (Property) >> World/Character [https://sengine.mp-gamer.com/scripting/world/character#characteralphatime](https://sengine.mp-gamer.com/scripting/world/character#characteralphatime) */
    AlphaTime: float;
    /** (Property) >> World/Character [https://sengine.mp-gamer.com/scripting/world/character#characterangle](https://sengine.mp-gamer.com/scripting/world/character#characterangle) */
    Angle: float;
    /** (Property) >> World/Character [https://sengine.mp-gamer.com/scripting/world/character#charactereulerangle](https://sengine.mp-gamer.com/scripting/world/character#charactereulerangle) */
    EulerAngle: Vector;
    /** (Property) >> World/Character [https://sengine.mp-gamer.com/scripting/world/character#characterhealth](https://sengine.mp-gamer.com/scripting/world/character#characterhealth) */
    Health: int;
    /** (Property) >> World/Character [https://sengine.mp-gamer.com/scripting/world/character#characterarmour](https://sengine.mp-gamer.com/scripting/world/character#characterarmour) */
    Armour: int;
    /** (Property) >> World/Character [https://sengine.mp-gamer.com/scripting/world/character#characterbasedamage](https://sengine.mp-gamer.com/scripting/world/character#characterbasedamage) */
    BaseDamage: int;
    /** (Property) >> World/Character [https://sengine.mp-gamer.com/scripting/world/character#characterdamagemultiplier](https://sengine.mp-gamer.com/scripting/world/character#characterdamagemultiplier) */
    DamageMultiplier: float;
    /** (Property) >> World/Character [https://sengine.mp-gamer.com/scripting/world/character#characterfocuspos](https://sengine.mp-gamer.com/scripting/world/character#characterfocuspos) */
    FocusPos: Vector;
    /** (Property) >> World/Character [https://sengine.mp-gamer.com/scripting/world/character#charactertriggerdistance](https://sengine.mp-gamer.com/scripting/world/character#charactertriggerdistance) */
    TriggerDistance: float;
    /** (Property) >> World/Character [https://sengine.mp-gamer.com/scripting/world/character#characterskin](https://sengine.mp-gamer.com/scripting/world/character#characterskin) */
    Skin: int;
    /** (Property) >> World/Character [https://sengine.mp-gamer.com/scripting/world/character#characteranimaltype](https://sengine.mp-gamer.com/scripting/world/character#characteranimaltype) */
    AnimalType: int;
    /** (Property) >> World/Character [https://sengine.mp-gamer.com/scripting/world/character#characterprop](https://sengine.mp-gamer.com/scripting/world/character#characterprop) */
    Prop: Prop;
    /** (Property) >> World/Character [https://sengine.mp-gamer.com/scripting/world/character#characterpropslot](https://sengine.mp-gamer.com/scripting/world/character#characterpropslot) */
    PropSlot: int;
    /** (Property) >> World/Character [https://sengine.mp-gamer.com/scripting/world/character#characterpropcount](https://sengine.mp-gamer.com/scripting/world/character#characterpropcount) */
    PropCount: int;
    /** (Property) >> World/Character [https://sengine.mp-gamer.com/scripting/world/character#characterhasaction](https://sengine.mp-gamer.com/scripting/world/character#characterhasaction) */
    HasAction: bool;
    /** (Property) >> World/Character [https://sengine.mp-gamer.com/scripting/world/character#characterhasfocus](https://sengine.mp-gamer.com/scripting/world/character#characterhasfocus) */
    HasFocus: bool;
    /** (Property) >> World/Character [https://sengine.mp-gamer.com/scripting/world/character#characterfrozen](https://sengine.mp-gamer.com/scripting/world/character#characterfrozen) */
    Frozen: bool;
    /** (Property) >> World/Character [https://sengine.mp-gamer.com/scripting/world/character#characterflymode](https://sengine.mp-gamer.com/scripting/world/character#characterflymode) */
    FlyMode: bool;
    /** (Property) >> World/Character [https://sengine.mp-gamer.com/scripting/world/character#characterspeed](https://sengine.mp-gamer.com/scripting/world/character#characterspeed) */
    Speed: float;
    /** (Property) >> World/Character [https://sengine.mp-gamer.com/scripting/world/character#characterspeedmultiplier](https://sengine.mp-gamer.com/scripting/world/character#characterspeedmultiplier) */
    SpeedMultiplier: float;
    /** (Property) >> World/Character [https://sengine.mp-gamer.com/scripting/world/character#characteradditionspeed](https://sengine.mp-gamer.com/scripting/world/character#characteradditionspeed) */
    AdditionSpeed: float;
    /** (Property) >> World/Character [https://sengine.mp-gamer.com/scripting/world/character#characteradditionspeedmultiplier](https://sengine.mp-gamer.com/scripting/world/character#characteradditionspeedmultiplier) */
    AdditionSpeedMultiplier: float;
    /** (Property) >> World/Character [https://sengine.mp-gamer.com/scripting/world/character#characteractioncontinue](https://sengine.mp-gamer.com/scripting/world/character#characteractioncontinue) */
    ActionContinue: int;
    /** (Property) >> World/Character [https://sengine.mp-gamer.com/scripting/world/character#characterinstance](https://sengine.mp-gamer.com/scripting/world/character#characterinstance) */
    Instance: CCharacter;
    /** (Property) >> World/Character [https://sengine.mp-gamer.com/scripting/world/character#characterowner](https://sengine.mp-gamer.com/scripting/world/character#characterowner) */
    Owner: Player;
    /** (Property) >> World/Character [https://sengine.mp-gamer.com/scripting/world/character#charactervehicle](https://sengine.mp-gamer.com/scripting/world/character#charactervehicle) */
    Vehicle: Vehicle;
    /** (Property) >> World/Character [https://sengine.mp-gamer.com/scripting/world/character#characterisspawned](https://sengine.mp-gamer.com/scripting/world/character#characterisspawned) */
    IsSpawned: bool;
    /** (Property) >> World/Character [https://sengine.mp-gamer.com/scripting/world/character#characterisswimming](https://sengine.mp-gamer.com/scripting/world/character#characterisswimming) */
    IsSwimming: bool;
    /** (Property) >> World/Character [https://sengine.mp-gamer.com/scripting/world/character#characterisinwater](https://sengine.mp-gamer.com/scripting/world/character#characterisinwater) */
    IsInWater: bool;
    /** (Property) >> World/Character [https://sengine.mp-gamer.com/scripting/world/character#characterisdriver](https://sengine.mp-gamer.com/scripting/world/character#characterisdriver) */
    IsDriver: bool;
    /** (Property) >> World/Character [https://sengine.mp-gamer.com/scripting/world/character#characterispassenger](https://sengine.mp-gamer.com/scripting/world/character#characterispassenger) */
    IsPassenger: bool;
    /** (Property) >> World/Character [https://sengine.mp-gamer.com/scripting/world/character#characterisextend](https://sengine.mp-gamer.com/scripting/world/character#characterisextend) */
    IsExtend: bool;
    /** (Property) >> World/Character [https://sengine.mp-gamer.com/scripting/world/character#charactervehicletime](https://sengine.mp-gamer.com/scripting/world/character#charactervehicletime) */
    VehicleTime: float;
    /** (Property) >> World/Character [https://sengine.mp-gamer.com/scripting/world/character#characterpickuptime](https://sengine.mp-gamer.com/scripting/world/character#characterpickuptime) */
    PickupTime: float;
    /** (Property) >> World/Character [https://sengine.mp-gamer.com/scripting/world/character#charactercheckpointtime](https://sengine.mp-gamer.com/scripting/world/character#charactercheckpointtime) */
    CheckpointTime: float;
    /** (Property) >> World/Character [https://sengine.mp-gamer.com/scripting/world/character#characterflytime](https://sengine.mp-gamer.com/scripting/world/character#characterflytime) */
    FlyTime: float;
    /** (Property) >> World/Character [https://sengine.mp-gamer.com/scripting/world/character#characterpickup](https://sengine.mp-gamer.com/scripting/world/character#characterpickup) */
    Pickup: Pickup;
    /** (Property) >> World/Character [https://sengine.mp-gamer.com/scripting/world/character#charactercheckpoint](https://sengine.mp-gamer.com/scripting/world/character#charactercheckpoint) */
    Checkpoint: Checkpoint;
    /** (Property) >> World/Character [https://sengine.mp-gamer.com/scripting/world/character#characteraitarget](https://sengine.mp-gamer.com/scripting/world/character#characteraitarget) */
    AITarget: Entity;
    /** (Property) >> World/Character [https://sengine.mp-gamer.com/scripting/world/character#characteraistate](https://sengine.mp-gamer.com/scripting/world/character#characteraistate) */
    AIState: int;
    /** (Property) >> World/Character [https://sengine.mp-gamer.com/scripting/world/character#characteraimovestate](https://sengine.mp-gamer.com/scripting/world/character#characteraimovestate) */
    AIMoveState: int;
    /** (Property) >> World/Character [https://sengine.mp-gamer.com/scripting/world/character#characteraidistance](https://sengine.mp-gamer.com/scripting/world/character#characteraidistance) */
    AIDistance: float;
    /** (Property) >> World/Character [https://sengine.mp-gamer.com/scripting/world/character#charactercolor](https://sengine.mp-gamer.com/scripting/world/character#charactercolor) */
    Color: Color;
    /** (Property) >> World/Character [https://sengine.mp-gamer.com/scripting/world/character#charactercolor1](https://sengine.mp-gamer.com/scripting/world/character#charactercolor1) */
    Color1: Color;
    /** (Property) >> World/Character [https://sengine.mp-gamer.com/scripting/world/character#charactercolor2](https://sengine.mp-gamer.com/scripting/world/character#charactercolor2) */
    Color2: Color;
    /** (Property) >> World/Character [https://sengine.mp-gamer.com/scripting/world/character#characterentityinstance](https://sengine.mp-gamer.com/scripting/world/character#characterentityinstance) */
    EntityInstance: CEntity;
    /** (Property) >> World/Character [https://sengine.mp-gamer.com/scripting/world/character#characteranydata](https://sengine.mp-gamer.com/scripting/world/character#characteranydata) */
    AnyData: any;
    /** (Property) >> World/Character [https://sengine.mp-gamer.com/scripting/world/character#characteruniqueid](https://sengine.mp-gamer.com/scripting/world/character#characteruniqueid) */
    UniqueID: int;
    /** (Property) >> World/Character [https://sengine.mp-gamer.com/scripting/world/character#charactertag](https://sengine.mp-gamer.com/scripting/world/character#charactertag) */
    Tag: string;
    /** (Property) >> World/Character [https://sengine.mp-gamer.com/scripting/world/character#characteroutline](https://sengine.mp-gamer.com/scripting/world/character#characteroutline) */
    Outline: bool;
    /** (Property) >> World/Character [https://sengine.mp-gamer.com/scripting/world/character#characteroutlinecolor](https://sengine.mp-gamer.com/scripting/world/character#characteroutlinecolor) */
    OutlineColor: int;
    /** (Property) >> Client/Character [https://sengine.mp-gamer.com/scripting/client/character#characterinstance](https://sengine.mp-gamer.com/scripting/client/character#characterinstance) */
    Instance: CCharacter;
    /** (Property) >> Client/Character [https://sengine.mp-gamer.com/scripting/client/character#characterid](https://sengine.mp-gamer.com/scripting/client/character#characterid) */
    ID: int;
    /** (Property) >> Client/Character [https://sengine.mp-gamer.com/scripting/client/character#characteruuid](https://sengine.mp-gamer.com/scripting/client/character#characteruuid) */
    UUID: string;
    /** (Property) >> Client/Character [https://sengine.mp-gamer.com/scripting/client/character#charactername](https://sengine.mp-gamer.com/scripting/client/character#charactername) */
    Name: string;
    /** (Property) >> Client/Character [https://sengine.mp-gamer.com/scripting/client/character#characterpos](https://sengine.mp-gamer.com/scripting/client/character#characterpos) */
    Pos: Vector;
    /** (Property) >> Client/Character [https://sengine.mp-gamer.com/scripting/client/character#characterangle](https://sengine.mp-gamer.com/scripting/client/character#characterangle) */
    Angle: float;
    /** (Property) >> Client/Character [https://sengine.mp-gamer.com/scripting/client/character#characterhealth](https://sengine.mp-gamer.com/scripting/client/character#characterhealth) */
    Health: int;
    /** (Property) >> Client/Character [https://sengine.mp-gamer.com/scripting/client/character#characterarmour](https://sengine.mp-gamer.com/scripting/client/character#characterarmour) */
    Armour: int;
    /** (Property) >> Client/Character [https://sengine.mp-gamer.com/scripting/client/character#charactertype](https://sengine.mp-gamer.com/scripting/client/character#charactertype) */
    Type: int;
    /** (Property) >> Client/Character [https://sengine.mp-gamer.com/scripting/client/character#characterskin](https://sengine.mp-gamer.com/scripting/client/character#characterskin) */
    Skin: int;
    /** (Property) >> Client/Character [https://sengine.mp-gamer.com/scripting/client/character#characterfrozen](https://sengine.mp-gamer.com/scripting/client/character#characterfrozen) */
    Frozen: bool;
    /** (Property) >> Client/Character [https://sengine.mp-gamer.com/scripting/client/character#characterpropid](https://sengine.mp-gamer.com/scripting/client/character#characterpropid) */
    PropID: int;
    /** (Property) >> Client/Character [https://sengine.mp-gamer.com/scripting/client/character#characterpropamount](https://sengine.mp-gamer.com/scripting/client/character#characterpropamount) */
    PropAmount: int;
    /** (Property) >> Client/Character [https://sengine.mp-gamer.com/scripting/client/character#charactervehicle](https://sengine.mp-gamer.com/scripting/client/character#charactervehicle) */
    Vehicle: Vehicle;
    /** (Property) >> Client/Character [https://sengine.mp-gamer.com/scripting/client/character#charactervehicleslot](https://sengine.mp-gamer.com/scripting/client/character#charactervehicleslot) */
    VehicleSlot: int;
    /** (Property) >> Client/Character [https://sengine.mp-gamer.com/scripting/client/character#characterowner](https://sengine.mp-gamer.com/scripting/client/character#characterowner) */
    Owner: Player;
    /** (Property) >> Client/Character [https://sengine.mp-gamer.com/scripting/client/character#characterentityinstance](https://sengine.mp-gamer.com/scripting/client/character#characterentityinstance) */
    EntityInstance: CEntity;
}
/** **(Namespace) >> World/Vehicle** [https://sengine.mp-gamer.com/scripting/world/vehicle](https://sengine.mp-gamer.com/scripting/world/vehicle) */
declare namespace Vehicle {
    /** **(Static Method) >> World/Vehicle** [https://sengine.mp-gamer.com/scripting/world/vehicle#vehicleonvehiclespawn](https://sengine.mp-gamer.com/scripting/world/vehicle#vehicleonvehiclespawn) */
    declare static function OnVehicleSpawn(vehicle: Vehicle, isCreated: bool): void;
    /** **(Static Method) >> World/Vehicle** [https://sengine.mp-gamer.com/scripting/world/vehicle#vehicleonvehicleentered](https://sengine.mp-gamer.com/scripting/world/vehicle#vehicleonvehicleentered) */
    declare static function OnVehicleEntered(character: Character, vehicle: Vehicle, seat: int): void;
    /** **(Static Method) >> World/Vehicle** [https://sengine.mp-gamer.com/scripting/world/vehicle#vehicleonvehicleexited](https://sengine.mp-gamer.com/scripting/world/vehicle#vehicleonvehicleexited) */
    declare static function OnVehicleExited(character: Character, vehicle: Vehicle, seat: int): void;
    /** **(Static Method) >> World/Vehicle** [https://sengine.mp-gamer.com/scripting/world/vehicle#vehicleonvehicledamage](https://sengine.mp-gamer.com/scripting/world/vehicle#vehicleonvehicledamage) */
    declare static function OnVehicleDamage(vehicle: Vehicle, damage: int, from: Entity, type: int, isImmunity: bool): void;
    /** **(Static Method) >> World/Vehicle** [https://sengine.mp-gamer.com/scripting/world/vehicle#vehicleonvehiclehealthchange](https://sengine.mp-gamer.com/scripting/world/vehicle#vehicleonvehiclehealthchange) */
    declare static function OnVehicleHealthChange(vehicle: Vehicle, oldHealth: int, newHealth: int): void;
    /** **(Static Method) >> World/Vehicle** [https://sengine.mp-gamer.com/scripting/world/vehicle#vehicleonvehicleexplode](https://sengine.mp-gamer.com/scripting/world/vehicle#vehicleonvehicleexplode) */
    declare static function OnVehicleExplode(vehicle: Vehicle, reason: int): void;
    /** **(Static Method) >> World/Vehicle** [https://sengine.mp-gamer.com/scripting/world/vehicle#vehiclecreate](https://sengine.mp-gamer.com/scripting/world/vehicle#vehiclecreate) */
    declare static function Create(model: int, pos: Vector, angle: float = 0, color: Color = null): Vehicle;
    /** **(Static Method) >> World/Vehicle** [https://sengine.mp-gamer.com/scripting/world/vehicle#vehiclefind](https://sengine.mp-gamer.com/scripting/world/vehicle#vehiclefind) */
    declare static function Find(id: int): Vehicle;
    /** **(Static Method) >> World/Vehicle** [https://sengine.mp-gamer.com/scripting/world/vehicle#vehiclefindbyuuid](https://sengine.mp-gamer.com/scripting/world/vehicle#vehiclefindbyuuid) */
    declare static function FindByUUID(uuid: string): Vehicle;
    /** **(Static Method) >> World/Vehicle** [https://sengine.mp-gamer.com/scripting/world/vehicle#vehiclegetsourcedata](https://sengine.mp-gamer.com/scripting/world/vehicle#vehiclegetsourcedata) */
    declare static function GetSourceData(id: int): CVehicleData;
    /** **(Static Method) >> World/Vehicle** [https://sengine.mp-gamer.com/scripting/world/vehicle#vehiclegetcount](https://sengine.mp-gamer.com/scripting/world/vehicle#vehiclegetcount) */
    declare static function GetCount(): int;
    /** **(Static Method) >> World/Vehicle** [https://sengine.mp-gamer.com/scripting/world/vehicle#vehicleget](https://sengine.mp-gamer.com/scripting/world/vehicle#vehicleget) */
    declare static function Get(index: int): Vehicle;
    /** **(Static Method) >> World/Vehicle** [https://sengine.mp-gamer.com/scripting/world/vehicle#vehiclesetsourcedata](https://sengine.mp-gamer.com/scripting/world/vehicle#vehiclesetsourcedata) */
    declare static function SetSourceData(model: int, keyPath: string, value: any): void;
    /** **(Static Method) >> World/Vehicle** [https://sengine.mp-gamer.com/scripting/world/vehicle#vehiclegetsourcedata](https://sengine.mp-gamer.com/scripting/world/vehicle#vehiclegetsourcedata) */
    declare static function GetSourceData(model: int, keyPath: string): any;
    /** **(Static Method) >> World/Vehicle** [https://sengine.mp-gamer.com/scripting/world/vehicle#vehicleresetsourcedata](https://sengine.mp-gamer.com/scripting/world/vehicle#vehicleresetsourcedata) */
    declare static function ResetSourceData(model: int): void;
    /** **(Static Method) >> World/Vehicle** [https://sengine.mp-gamer.com/scripting/world/vehicle#vehicleresetalldata](https://sengine.mp-gamer.com/scripting/world/vehicle#vehicleresetalldata) */
    declare static function ResetAllData(model: int): void;
    /** **(Static Method) >> World/Vehicle** [https://sengine.mp-gamer.com/scripting/world/vehicle#vehicleresetallvehicledata](https://sengine.mp-gamer.com/scripting/world/vehicle#vehicleresetallvehicledata) */
    declare static function ResetAllVehicleData(): void;
    /** **(Static Method) >> Client/Vehicle** [https://sengine.mp-gamer.com/scripting/client/vehicle#vehiclefind](https://sengine.mp-gamer.com/scripting/client/vehicle#vehiclefind) */
    declare static function Find(id: int): Vehicle;
    /** **(Static Method) >> Client/Vehicle** [https://sengine.mp-gamer.com/scripting/client/vehicle#vehiclefindbyuuid](https://sengine.mp-gamer.com/scripting/client/vehicle#vehiclefindbyuuid) */
    declare static function FindByUUID(uuid: string): Vehicle;
    /** **(Static Method) >> Client/Vehicle** [https://sengine.mp-gamer.com/scripting/client/vehicle#vehiclegetcount](https://sengine.mp-gamer.com/scripting/client/vehicle#vehiclegetcount) */
    declare static function GetCount(): int;
    /** **(Static Method) >> Client/Vehicle** [https://sengine.mp-gamer.com/scripting/client/vehicle#vehicleget](https://sengine.mp-gamer.com/scripting/client/vehicle#vehicleget) */
    declare static function Get(index: int): Vehicle;
}
/** **(Class) >> World/Vehicle** */
declare class Vehicle {
    /** **(Public Method) >> World/Vehicle** [https://sengine.mp-gamer.com/scripting/world/vehicle#vehicleremove](https://sengine.mp-gamer.com/scripting/world/vehicle#vehicleremove) */
    Remove(): void;
    /** **(Public Method) >> World/Vehicle** [https://sengine.mp-gamer.com/scripting/world/vehicle#vehicledamage](https://sengine.mp-gamer.com/scripting/world/vehicle#vehicledamage) */
    Damage(damage: int, from: Entity = null, reason: int = 0): void;
    /** **(Public Method) >> World/Vehicle** [https://sengine.mp-gamer.com/scripting/world/vehicle#vehicleaddforce](https://sengine.mp-gamer.com/scripting/world/vehicle#vehicleaddforce) */
    AddForce(force: Vector, isLocal: bool = true): void;
    /** **(Public Method) >> World/Vehicle** [https://sengine.mp-gamer.com/scripting/world/vehicle#vehiclesetoccupant](https://sengine.mp-gamer.com/scripting/world/vehicle#vehiclesetoccupant) */
    SetOccupant(character: Character, seat: int): void;
    /** **(Public Method) >> World/Vehicle** [https://sengine.mp-gamer.com/scripting/world/vehicle#vehiclegetoccupant](https://sengine.mp-gamer.com/scripting/world/vehicle#vehiclegetoccupant) */
    GetOccupant(seat: int): Character;
    /** **(Public Method) >> World/Vehicle** [https://sengine.mp-gamer.com/scripting/world/vehicle#vehiclefindoccupant](https://sengine.mp-gamer.com/scripting/world/vehicle#vehiclefindoccupant) */
    FindOccupant(character: Character): int;
    /** **(Public Method) >> World/Vehicle** [https://sengine.mp-gamer.com/scripting/world/vehicle#vehiclefix](https://sengine.mp-gamer.com/scripting/world/vehicle#vehiclefix) */
    Fix(): void;
    /** **(Public Method) >> World/Vehicle** [https://sengine.mp-gamer.com/scripting/world/vehicle#vehiclekill](https://sengine.mp-gamer.com/scripting/world/vehicle#vehiclekill) */
    Kill(): void;
    /** **(Public Method) >> World/Vehicle** [https://sengine.mp-gamer.com/scripting/world/vehicle#vehiclerespawn](https://sengine.mp-gamer.com/scripting/world/vehicle#vehiclerespawn) */
    Respawn(): void;
    /** **(Public Method) >> World/Vehicle** [https://sengine.mp-gamer.com/scripting/world/vehicle#vehicleejectall](https://sengine.mp-gamer.com/scripting/world/vehicle#vehicleejectall) */
    EjectAll(): void;
    /** **(Public Method) >> World/Vehicle** [https://sengine.mp-gamer.com/scripting/world/vehicle#vehiclesettyre](https://sengine.mp-gamer.com/scripting/world/vehicle#vehiclesettyre) */
    SetTyre(index: int, state: int): void;
    /** **(Public Method) >> World/Vehicle** [https://sengine.mp-gamer.com/scripting/world/vehicle#vehiclegettyre](https://sengine.mp-gamer.com/scripting/world/vehicle#vehiclegettyre) */
    GetTyre(index: int): int;
    /** **(Public Method) >> World/Vehicle** [https://sengine.mp-gamer.com/scripting/world/vehicle#vehiclesetdata](https://sengine.mp-gamer.com/scripting/world/vehicle#vehiclesetdata) */
    SetData(key: string, value: any): void;
    /** **(Public Method) >> World/Vehicle** [https://sengine.mp-gamer.com/scripting/world/vehicle#vehiclegetdata](https://sengine.mp-gamer.com/scripting/world/vehicle#vehiclegetdata) */
    GetData(key: string): any;
    /** **(Public Method) >> World/Vehicle** [https://sengine.mp-gamer.com/scripting/world/vehicle#vehicleresetdata](https://sengine.mp-gamer.com/scripting/world/vehicle#vehicleresetdata) */
    ResetData(): void;
    /** (Property) >> World/Vehicle [https://sengine.mp-gamer.com/scripting/world/vehicle#vehicleid](https://sengine.mp-gamer.com/scripting/world/vehicle#vehicleid) */
    ID: int;
    /** (Property) >> World/Vehicle [https://sengine.mp-gamer.com/scripting/world/vehicle#vehicleuuid](https://sengine.mp-gamer.com/scripting/world/vehicle#vehicleuuid) */
    UUID: string;
    /** (Property) >> World/Vehicle [https://sengine.mp-gamer.com/scripting/world/vehicle#vehicleinstance](https://sengine.mp-gamer.com/scripting/world/vehicle#vehicleinstance) */
    Instance: CVehicle;
    /** (Property) >> World/Vehicle [https://sengine.mp-gamer.com/scripting/world/vehicle#vehicleworld](https://sengine.mp-gamer.com/scripting/world/vehicle#vehicleworld) */
    World: int;
    /** (Property) >> World/Vehicle [https://sengine.mp-gamer.com/scripting/world/vehicle#vehiclemodel](https://sengine.mp-gamer.com/scripting/world/vehicle#vehiclemodel) */
    Model: int;
    /** (Property) >> World/Vehicle [https://sengine.mp-gamer.com/scripting/world/vehicle#vehicletype](https://sengine.mp-gamer.com/scripting/world/vehicle#vehicletype) */
    Type: int;
    /** (Property) >> World/Vehicle [https://sengine.mp-gamer.com/scripting/world/vehicle#vehicledata](https://sengine.mp-gamer.com/scripting/world/vehicle#vehicledata) */
    Data: CVehicleData;
    /** (Property) >> World/Vehicle [https://sengine.mp-gamer.com/scripting/world/vehicle#vehiclepos](https://sengine.mp-gamer.com/scripting/world/vehicle#vehiclepos) */
    Pos: Vector;
    /** (Property) >> World/Vehicle [https://sengine.mp-gamer.com/scripting/world/vehicle#vehicleangle](https://sengine.mp-gamer.com/scripting/world/vehicle#vehicleangle) */
    Angle: float;
    /** (Property) >> World/Vehicle [https://sengine.mp-gamer.com/scripting/world/vehicle#vehicleeulerangle](https://sengine.mp-gamer.com/scripting/world/vehicle#vehicleeulerangle) */
    EulerAngle: Vector;
    /** (Property) >> World/Vehicle [https://sengine.mp-gamer.com/scripting/world/vehicle#vehiclehealth](https://sengine.mp-gamer.com/scripting/world/vehicle#vehiclehealth) */
    Health: int;
    /** (Property) >> World/Vehicle [https://sengine.mp-gamer.com/scripting/world/vehicle#vehicledamagemultiplier](https://sengine.mp-gamer.com/scripting/world/vehicle#vehicledamagemultiplier) */
    DamageMultiplier: float;
    /** (Property) >> World/Vehicle [https://sengine.mp-gamer.com/scripting/world/vehicle#vehicleimmunity](https://sengine.mp-gamer.com/scripting/world/vehicle#vehicleimmunity) */
    Immunity: int;
    /** (Property) >> World/Vehicle [https://sengine.mp-gamer.com/scripting/world/vehicle#vehiclelight](https://sengine.mp-gamer.com/scripting/world/vehicle#vehiclelight) */
    Light: int;
    /** (Property) >> World/Vehicle [https://sengine.mp-gamer.com/scripting/world/vehicle#vehicleflarelight](https://sengine.mp-gamer.com/scripting/world/vehicle#vehicleflarelight) */
    FlareLight: bool;
    /** (Property) >> World/Vehicle [https://sengine.mp-gamer.com/scripting/world/vehicle#vehiclehorn](https://sengine.mp-gamer.com/scripting/world/vehicle#vehiclehorn) */
    Horn: bool;
    /** (Property) >> World/Vehicle [https://sengine.mp-gamer.com/scripting/world/vehicle#vehiclealarm](https://sengine.mp-gamer.com/scripting/world/vehicle#vehiclealarm) */
    Alarm: bool;
    /** (Property) >> World/Vehicle [https://sengine.mp-gamer.com/scripting/world/vehicle#vehiclecolor](https://sengine.mp-gamer.com/scripting/world/vehicle#vehiclecolor) */
    Color: Color;
    /** (Property) >> World/Vehicle [https://sengine.mp-gamer.com/scripting/world/vehicle#vehicledriver](https://sengine.mp-gamer.com/scripting/world/vehicle#vehicledriver) */
    Driver: Character;
    /** (Property) >> World/Vehicle [https://sengine.mp-gamer.com/scripting/world/vehicle#vehicleseat](https://sengine.mp-gamer.com/scripting/world/vehicle#vehicleseat) */
    Seat: int;
    /** (Property) >> World/Vehicle [https://sengine.mp-gamer.com/scripting/world/vehicle#vehicleseated](https://sengine.mp-gamer.com/scripting/world/vehicle#vehicleseated) */
    Seated: int;
    /** (Property) >> World/Vehicle [https://sengine.mp-gamer.com/scripting/world/vehicle#vehiclevelocity](https://sengine.mp-gamer.com/scripting/world/vehicle#vehiclevelocity) */
    Velocity: Vector;
    /** (Property) >> World/Vehicle [https://sengine.mp-gamer.com/scripting/world/vehicle#vehiclespeed](https://sengine.mp-gamer.com/scripting/world/vehicle#vehiclespeed) */
    Speed: float;
    /** (Property) >> World/Vehicle [https://sengine.mp-gamer.com/scripting/world/vehicle#vehiclespeedprogress](https://sengine.mp-gamer.com/scripting/world/vehicle#vehiclespeedprogress) */
    SpeedProgress: float;
    /** (Property) >> World/Vehicle [https://sengine.mp-gamer.com/scripting/world/vehicle#vehicleisdamaged](https://sengine.mp-gamer.com/scripting/world/vehicle#vehicleisdamaged) */
    IsDamaged: bool;
    /** (Property) >> World/Vehicle [https://sengine.mp-gamer.com/scripting/world/vehicle#vehicleisinwater](https://sengine.mp-gamer.com/scripting/world/vehicle#vehicleisinwater) */
    IsInWater: bool;
    /** (Property) >> World/Vehicle [https://sengine.mp-gamer.com/scripting/world/vehicle#vehiclepowerstate](https://sengine.mp-gamer.com/scripting/world/vehicle#vehiclepowerstate) */
    PowerState: int;
    /** (Property) >> World/Vehicle [https://sengine.mp-gamer.com/scripting/world/vehicle#vehicleturnstate](https://sengine.mp-gamer.com/scripting/world/vehicle#vehicleturnstate) */
    TurnState: int;
    /** (Property) >> World/Vehicle [https://sengine.mp-gamer.com/scripting/world/vehicle#vehicleengine](https://sengine.mp-gamer.com/scripting/world/vehicle#vehicleengine) */
    Engine: bool;
    /** (Property) >> World/Vehicle [https://sengine.mp-gamer.com/scripting/world/vehicle#vehiclelocked](https://sengine.mp-gamer.com/scripting/world/vehicle#vehiclelocked) */
    Locked: bool;
    /** (Property) >> World/Vehicle [https://sengine.mp-gamer.com/scripting/world/vehicle#vehicleghostmode](https://sengine.mp-gamer.com/scripting/world/vehicle#vehicleghostmode) */
    GhostMode: bool;
    /** (Property) >> World/Vehicle [https://sengine.mp-gamer.com/scripting/world/vehicle#vehicleentityinstance](https://sengine.mp-gamer.com/scripting/world/vehicle#vehicleentityinstance) */
    EntityInstance: CEntity;
    /** (Property) >> World/Vehicle [https://sengine.mp-gamer.com/scripting/world/vehicle#vehicleanydata](https://sengine.mp-gamer.com/scripting/world/vehicle#vehicleanydata) */
    AnyData: any;
    /** (Property) >> World/Vehicle [https://sengine.mp-gamer.com/scripting/world/vehicle#vehicleuniqueid](https://sengine.mp-gamer.com/scripting/world/vehicle#vehicleuniqueid) */
    UniqueID: int;
    /** (Property) >> World/Vehicle [https://sengine.mp-gamer.com/scripting/world/vehicle#vehicletag](https://sengine.mp-gamer.com/scripting/world/vehicle#vehicletag) */
    Tag: string;
    /** (Property) >> World/Vehicle [https://sengine.mp-gamer.com/scripting/world/vehicle#vehicleoutline](https://sengine.mp-gamer.com/scripting/world/vehicle#vehicleoutline) */
    Outline: bool;
    /** (Property) >> World/Vehicle [https://sengine.mp-gamer.com/scripting/world/vehicle#vehicleoutlinecolor](https://sengine.mp-gamer.com/scripting/world/vehicle#vehicleoutlinecolor) */
    OutlineColor: int;
    /** **(Public Method) >> Client/Vehicle** [https://sengine.mp-gamer.com/scripting/client/vehicle#vehiclegetoccupant](https://sengine.mp-gamer.com/scripting/client/vehicle#vehiclegetoccupant) */
    GetOccupant(seat: int): Character;
    /** **(Public Method) >> Client/Vehicle** [https://sengine.mp-gamer.com/scripting/client/vehicle#vehiclefindoccupant](https://sengine.mp-gamer.com/scripting/client/vehicle#vehiclefindoccupant) */
    FindOccupant(character: Character): int;
    /** **(Public Method) >> Client/Vehicle** [https://sengine.mp-gamer.com/scripting/client/vehicle#vehiclegettyre](https://sengine.mp-gamer.com/scripting/client/vehicle#vehiclegettyre) */
    GetTyre(index: int): int;
    /** **(Public Method) >> Client/Vehicle** [https://sengine.mp-gamer.com/scripting/client/vehicle#vehiclegetdata](https://sengine.mp-gamer.com/scripting/client/vehicle#vehiclegetdata) */
    GetData(key: string): any;
    /** (Property) >> Client/Vehicle [https://sengine.mp-gamer.com/scripting/client/vehicle#vehicleinstance](https://sengine.mp-gamer.com/scripting/client/vehicle#vehicleinstance) */
    Instance: CVehicle;
    /** (Property) >> Client/Vehicle [https://sengine.mp-gamer.com/scripting/client/vehicle#vehicleid](https://sengine.mp-gamer.com/scripting/client/vehicle#vehicleid) */
    ID: int;
    /** (Property) >> Client/Vehicle [https://sengine.mp-gamer.com/scripting/client/vehicle#vehicleuuid](https://sengine.mp-gamer.com/scripting/client/vehicle#vehicleuuid) */
    UUID: string;
    /** (Property) >> Client/Vehicle [https://sengine.mp-gamer.com/scripting/client/vehicle#vehiclepos](https://sengine.mp-gamer.com/scripting/client/vehicle#vehiclepos) */
    Pos: Vector;
    /** (Property) >> Client/Vehicle [https://sengine.mp-gamer.com/scripting/client/vehicle#vehicleangle](https://sengine.mp-gamer.com/scripting/client/vehicle#vehicleangle) */
    Angle: float;
    /** (Property) >> Client/Vehicle [https://sengine.mp-gamer.com/scripting/client/vehicle#vehicleeulerangle](https://sengine.mp-gamer.com/scripting/client/vehicle#vehicleeulerangle) */
    EulerAngle: Vector;
    /** (Property) >> Client/Vehicle [https://sengine.mp-gamer.com/scripting/client/vehicle#vehiclemodel](https://sengine.mp-gamer.com/scripting/client/vehicle#vehiclemodel) */
    Model: int;
    /** (Property) >> Client/Vehicle [https://sengine.mp-gamer.com/scripting/client/vehicle#vehicletype](https://sengine.mp-gamer.com/scripting/client/vehicle#vehicletype) */
    Type: int;
    /** (Property) >> Client/Vehicle [https://sengine.mp-gamer.com/scripting/client/vehicle#vehiclehealth](https://sengine.mp-gamer.com/scripting/client/vehicle#vehiclehealth) */
    Health: int;
    /** (Property) >> Client/Vehicle [https://sengine.mp-gamer.com/scripting/client/vehicle#vehicleseat](https://sengine.mp-gamer.com/scripting/client/vehicle#vehicleseat) */
    Seat: int;
    /** (Property) >> Client/Vehicle [https://sengine.mp-gamer.com/scripting/client/vehicle#vehicleseated](https://sengine.mp-gamer.com/scripting/client/vehicle#vehicleseated) */
    Seated: int;
    /** (Property) >> Client/Vehicle [https://sengine.mp-gamer.com/scripting/client/vehicle#vehicleengine](https://sengine.mp-gamer.com/scripting/client/vehicle#vehicleengine) */
    Engine: bool;
    /** (Property) >> Client/Vehicle [https://sengine.mp-gamer.com/scripting/client/vehicle#vehiclelocked](https://sengine.mp-gamer.com/scripting/client/vehicle#vehiclelocked) */
    Locked: bool;
    /** (Property) >> Client/Vehicle [https://sengine.mp-gamer.com/scripting/client/vehicle#vehicleghostmode](https://sengine.mp-gamer.com/scripting/client/vehicle#vehicleghostmode) */
    GhostMode: bool;
    /** (Property) >> Client/Vehicle [https://sengine.mp-gamer.com/scripting/client/vehicle#vehiclecolor](https://sengine.mp-gamer.com/scripting/client/vehicle#vehiclecolor) */
    Color: Color;
    /** (Property) >> Client/Vehicle [https://sengine.mp-gamer.com/scripting/client/vehicle#vehicledriver](https://sengine.mp-gamer.com/scripting/client/vehicle#vehicledriver) */
    Driver: Character;
    /** (Property) >> Client/Vehicle [https://sengine.mp-gamer.com/scripting/client/vehicle#vehicleentityinstance](https://sengine.mp-gamer.com/scripting/client/vehicle#vehicleentityinstance) */
    EntityInstance: CEntity;
}
/** **(Namespace) >> World/Model** [https://sengine.mp-gamer.com/scripting/world/model](https://sengine.mp-gamer.com/scripting/world/model) */
declare namespace Model {
    /** **(Static Method) >> World/Model** [https://sengine.mp-gamer.com/scripting/world/model#modelonmodeldamage](https://sengine.mp-gamer.com/scripting/world/model#modelonmodeldamage) */
    declare static function OnModelDamage(model: Model, damage: int, from: Entity, type: int, IsImmunity: bool): void;
    /** **(Static Method) >> World/Model** [https://sengine.mp-gamer.com/scripting/world/model#modelonmodelcollision](https://sengine.mp-gamer.com/scripting/world/model#modelonmodelcollision) */
    declare static function OnModelCollision(model: Model, from: Entity): void;
    /** **(Static Method) >> World/Model** [https://sengine.mp-gamer.com/scripting/world/model#modelonmodelhealthchange](https://sengine.mp-gamer.com/scripting/world/model#modelonmodelhealthchange) */
    declare static function OnModelHealthChange(model: Model, oldHealth: int, newHealth: int): void;
    /** **(Static Method) >> World/Model** [https://sengine.mp-gamer.com/scripting/world/model#modelcreate](https://sengine.mp-gamer.com/scripting/world/model#modelcreate) */
    declare static function Create(model: int, pos: Vector, angle: Vector = null): Model;
    /** **(Static Method) >> World/Model** [https://sengine.mp-gamer.com/scripting/world/model#modelcreate](https://sengine.mp-gamer.com/scripting/world/model#modelcreate) */
    declare static function Create(model: int, pos: Vector, angle: float = 0): Model;
    /** **(Static Method) >> World/Model** [https://sengine.mp-gamer.com/scripting/world/model#modelcreateeffect](https://sengine.mp-gamer.com/scripting/world/model#modelcreateeffect) */
    declare static function CreateEffect(effect: int, pos: Vector, angle: Vector = null): Model;
    /** **(Static Method) >> World/Model** [https://sengine.mp-gamer.com/scripting/world/model#modelcreateeffect](https://sengine.mp-gamer.com/scripting/world/model#modelcreateeffect) */
    declare static function CreateEffect(effect: int, pos: Vector, angle: float = 0): Model;
    /** **(Static Method) >> World/Model** [https://sengine.mp-gamer.com/scripting/world/model#modelfind](https://sengine.mp-gamer.com/scripting/world/model#modelfind) */
    declare static function Find(id: int): Model;
    /** **(Static Method) >> World/Model** [https://sengine.mp-gamer.com/scripting/world/model#modelfindbyuuid](https://sengine.mp-gamer.com/scripting/world/model#modelfindbyuuid) */
    declare static function FindByUUID(uuid: string): Model;
    /** **(Static Method) >> World/Model** [https://sengine.mp-gamer.com/scripting/world/model#modelgetcount](https://sengine.mp-gamer.com/scripting/world/model#modelgetcount) */
    declare static function GetCount(): int;
    /** **(Static Method) >> World/Model** [https://sengine.mp-gamer.com/scripting/world/model#modelget](https://sengine.mp-gamer.com/scripting/world/model#modelget) */
    declare static function Get(index: int): Model;
    /** **(Static Method) >> World/Model** [https://sengine.mp-gamer.com/scripting/world/model#modelgettagcount](https://sengine.mp-gamer.com/scripting/world/model#modelgettagcount) */
    declare static function GetTagCount(tag: string): int;
    /** **(Static Method) >> World/Model** [https://sengine.mp-gamer.com/scripting/world/model#modelgetbytag](https://sengine.mp-gamer.com/scripting/world/model#modelgetbytag) */
    declare static function GetByTag(tag: string, index: int = 0): CModel;
    /** **(Static Method) >> World/Model** [https://sengine.mp-gamer.com/scripting/world/model#modelexistmodel](https://sengine.mp-gamer.com/scripting/world/model#modelexistmodel) */
    declare static function ExistModel(model: int): bool;
    /** **(Static Method) >> Client/Model** [https://sengine.mp-gamer.com/scripting/client/model#modelfind](https://sengine.mp-gamer.com/scripting/client/model#modelfind) */
    declare static function Find(id: int): Model;
    /** **(Static Method) >> Client/Model** [https://sengine.mp-gamer.com/scripting/client/model#modelfindbyuuid](https://sengine.mp-gamer.com/scripting/client/model#modelfindbyuuid) */
    declare static function FindByUUID(uuid: string): Model;
    /** **(Static Method) >> Client/Model** [https://sengine.mp-gamer.com/scripting/client/model#modelgetcount](https://sengine.mp-gamer.com/scripting/client/model#modelgetcount) */
    declare static function GetCount(): int;
    /** **(Static Method) >> Client/Model** [https://sengine.mp-gamer.com/scripting/client/model#modelget](https://sengine.mp-gamer.com/scripting/client/model#modelget) */
    declare static function Get(index: int): Model;
}
/** **(Class) >> World/Model** */
declare class Model {
    /** **(Public Method) >> World/Model** [https://sengine.mp-gamer.com/scripting/world/model#modelremove](https://sengine.mp-gamer.com/scripting/world/model#modelremove) */
    Remove(): void;
    /** **(Public Method) >> World/Model** [https://sengine.mp-gamer.com/scripting/world/model#modeldamage](https://sengine.mp-gamer.com/scripting/world/model#modeldamage) */
    Damage(damage: int, from: Entity = null, reason: int = 0): void;
    /** **(Public Method) >> World/Model** [https://sengine.mp-gamer.com/scripting/world/model#modeladdforce](https://sengine.mp-gamer.com/scripting/world/model#modeladdforce) */
    AddForce(force: Vector, isLocal: bool = true): void;
    /** **(Public Method) >> World/Model** [https://sengine.mp-gamer.com/scripting/world/model#modelmoveto](https://sengine.mp-gamer.com/scripting/world/model#modelmoveto) */
    MoveTo(pos: Vector = null, time: float = -1): void;
    /** **(Public Method) >> World/Model** [https://sengine.mp-gamer.com/scripting/world/model#modelrotateto](https://sengine.mp-gamer.com/scripting/world/model#modelrotateto) */
    RotateTo(euler: Vector = null, time: float = -1): void;
    /** **(Public Method) >> World/Model** [https://sengine.mp-gamer.com/scripting/world/model#modelscaleto](https://sengine.mp-gamer.com/scripting/world/model#modelscaleto) */
    ScaleTo(scale: Vector = null, time: float = -1): void;
    /** (Property) >> World/Model [https://sengine.mp-gamer.com/scripting/world/model#modelinstance](https://sengine.mp-gamer.com/scripting/world/model#modelinstance) */
    Instance: CModel;
    /** (Property) >> World/Model [https://sengine.mp-gamer.com/scripting/world/model#modelid](https://sengine.mp-gamer.com/scripting/world/model#modelid) */
    ID: int;
    /** (Property) >> World/Model [https://sengine.mp-gamer.com/scripting/world/model#modeluuid](https://sengine.mp-gamer.com/scripting/world/model#modeluuid) */
    UUID: string;
    /** (Property) >> World/Model [https://sengine.mp-gamer.com/scripting/world/model#modelmodelid](https://sengine.mp-gamer.com/scripting/world/model#modelmodelid) */
    ModelID: int;
    /** (Property) >> World/Model [https://sengine.mp-gamer.com/scripting/world/model#modelworld](https://sengine.mp-gamer.com/scripting/world/model#modelworld) */
    World: int;
    /** (Property) >> World/Model [https://sengine.mp-gamer.com/scripting/world/model#modelhealth](https://sengine.mp-gamer.com/scripting/world/model#modelhealth) */
    Health: int;
    /** (Property) >> World/Model [https://sengine.mp-gamer.com/scripting/world/model#modelpos](https://sengine.mp-gamer.com/scripting/world/model#modelpos) */
    Pos: Vector;
    /** (Property) >> World/Model [https://sengine.mp-gamer.com/scripting/world/model#modelangle](https://sengine.mp-gamer.com/scripting/world/model#modelangle) */
    Angle: float;
    /** (Property) >> World/Model [https://sengine.mp-gamer.com/scripting/world/model#modeleulerangle](https://sengine.mp-gamer.com/scripting/world/model#modeleulerangle) */
    EulerAngle: Vector;
    /** (Property) >> World/Model [https://sengine.mp-gamer.com/scripting/world/model#modelscale](https://sengine.mp-gamer.com/scripting/world/model#modelscale) */
    Scale: Vector;
    /** (Property) >> World/Model [https://sengine.mp-gamer.com/scripting/world/model#modelcolor](https://sengine.mp-gamer.com/scripting/world/model#modelcolor) */
    Color: Color;
    /** (Property) >> World/Model [https://sengine.mp-gamer.com/scripting/world/model#modelalpha](https://sengine.mp-gamer.com/scripting/world/model#modelalpha) */
    Alpha: int;
    /** (Property) >> World/Model [https://sengine.mp-gamer.com/scripting/world/model#modelcollision](https://sengine.mp-gamer.com/scripting/world/model#modelcollision) */
    Collision: bool;
    /** (Property) >> World/Model [https://sengine.mp-gamer.com/scripting/world/model#modelisshine](https://sengine.mp-gamer.com/scripting/world/model#modelisshine) */
    IsShine: bool;
    /** (Property) >> World/Model [https://sengine.mp-gamer.com/scripting/world/model#modelphysics](https://sengine.mp-gamer.com/scripting/world/model#modelphysics) */
    Physics: bool;
    /** (Property) >> World/Model [https://sengine.mp-gamer.com/scripting/world/model#modelemission](https://sengine.mp-gamer.com/scripting/world/model#modelemission) */
    Emission: bool;
    /** (Property) >> World/Model [https://sengine.mp-gamer.com/scripting/world/model#modelemissioncolor](https://sengine.mp-gamer.com/scripting/world/model#modelemissioncolor) */
    EmissionColor: Color;
    /** (Property) >> World/Model [https://sengine.mp-gamer.com/scripting/world/model#modelemissionintensity](https://sengine.mp-gamer.com/scripting/world/model#modelemissionintensity) */
    EmissionIntensity: float;
    /** (Property) >> World/Model [https://sengine.mp-gamer.com/scripting/world/model#modelenum](https://sengine.mp-gamer.com/scripting/world/model#modelenum) */
    Enum: int;
    /** (Property) >> World/Model [https://sengine.mp-gamer.com/scripting/world/model#modelboolvalue](https://sengine.mp-gamer.com/scripting/world/model#modelboolvalue) */
    BoolValue: bool;
    /** (Property) >> World/Model [https://sengine.mp-gamer.com/scripting/world/model#modelrange](https://sengine.mp-gamer.com/scripting/world/model#modelrange) */
    Range: float;
    /** (Property) >> World/Model [https://sengine.mp-gamer.com/scripting/world/model#modelintensity](https://sengine.mp-gamer.com/scripting/world/model#modelintensity) */
    Intensity: float;
    /** (Property) >> World/Model [https://sengine.mp-gamer.com/scripting/world/model#modelhasparent](https://sengine.mp-gamer.com/scripting/world/model#modelhasparent) */
    HasParent: bool;
    /** (Property) >> World/Model [https://sengine.mp-gamer.com/scripting/world/model#modelboundsize](https://sengine.mp-gamer.com/scripting/world/model#modelboundsize) */
    BoundSize: float;
    /** (Property) >> World/Model [https://sengine.mp-gamer.com/scripting/world/model#modelentityinstance](https://sengine.mp-gamer.com/scripting/world/model#modelentityinstance) */
    EntityInstance: CEntity;
    /** (Property) >> World/Model [https://sengine.mp-gamer.com/scripting/world/model#modelanydata](https://sengine.mp-gamer.com/scripting/world/model#modelanydata) */
    AnyData: any;
    /** (Property) >> World/Model [https://sengine.mp-gamer.com/scripting/world/model#modeluniqueid](https://sengine.mp-gamer.com/scripting/world/model#modeluniqueid) */
    UniqueID: int;
    /** (Property) >> World/Model [https://sengine.mp-gamer.com/scripting/world/model#modeltag](https://sengine.mp-gamer.com/scripting/world/model#modeltag) */
    Tag: string;
    /** (Property) >> World/Model [https://sengine.mp-gamer.com/scripting/world/model#modeloutline](https://sengine.mp-gamer.com/scripting/world/model#modeloutline) */
    Outline: bool;
    /** (Property) >> World/Model [https://sengine.mp-gamer.com/scripting/world/model#modeloutlinecolor](https://sengine.mp-gamer.com/scripting/world/model#modeloutlinecolor) */
    OutlineColor: int;
    /** (Property) >> Client/Model [https://sengine.mp-gamer.com/scripting/client/model#modelinstance](https://sengine.mp-gamer.com/scripting/client/model#modelinstance) */
    Instance: CModel;
    /** (Property) >> Client/Model [https://sengine.mp-gamer.com/scripting/client/model#modelid](https://sengine.mp-gamer.com/scripting/client/model#modelid) */
    ID: int;
    /** (Property) >> Client/Model [https://sengine.mp-gamer.com/scripting/client/model#modeluuid](https://sengine.mp-gamer.com/scripting/client/model#modeluuid) */
    UUID: string;
    /** (Property) >> Client/Model [https://sengine.mp-gamer.com/scripting/client/model#modelpos](https://sengine.mp-gamer.com/scripting/client/model#modelpos) */
    Pos: Vector;
    /** (Property) >> Client/Model [https://sengine.mp-gamer.com/scripting/client/model#modelangle](https://sengine.mp-gamer.com/scripting/client/model#modelangle) */
    Angle: float;
    /** (Property) >> Client/Model [https://sengine.mp-gamer.com/scripting/client/model#modeleulerangle](https://sengine.mp-gamer.com/scripting/client/model#modeleulerangle) */
    EulerAngle: Vector;
    /** (Property) >> Client/Model [https://sengine.mp-gamer.com/scripting/client/model#modelscale](https://sengine.mp-gamer.com/scripting/client/model#modelscale) */
    Scale: Vector;
    /** (Property) >> Client/Model [https://sengine.mp-gamer.com/scripting/client/model#modelmodelid](https://sengine.mp-gamer.com/scripting/client/model#modelmodelid) */
    ModelID: int;
    /** (Property) >> Client/Model [https://sengine.mp-gamer.com/scripting/client/model#modelcolor](https://sengine.mp-gamer.com/scripting/client/model#modelcolor) */
    Color: Color;
    /** (Property) >> Client/Model [https://sengine.mp-gamer.com/scripting/client/model#modelentityinstance](https://sengine.mp-gamer.com/scripting/client/model#modelentityinstance) */
    EntityInstance: CEntity;
}
/** **(Namespace) >> World/Pickup** [https://sengine.mp-gamer.com/scripting/world/pickup](https://sengine.mp-gamer.com/scripting/world/pickup) */
declare namespace Pickup {
    /** **(Static Method) >> World/Pickup** [https://sengine.mp-gamer.com/scripting/world/pickup#pickuponpickupentered](https://sengine.mp-gamer.com/scripting/world/pickup#pickuponpickupentered) */
    declare static function OnPickupEntered(pickup: Pickup, character: Character): void;
    /** **(Static Method) >> World/Pickup** [https://sengine.mp-gamer.com/scripting/world/pickup#pickuponpickupexited](https://sengine.mp-gamer.com/scripting/world/pickup#pickuponpickupexited) */
    declare static function OnPickupExited(pickup: Pickup, character: Character): void;
    /** **(Static Method) >> World/Pickup** [https://sengine.mp-gamer.com/scripting/world/pickup#pickupcreate](https://sengine.mp-gamer.com/scripting/world/pickup#pickupcreate) */
    declare static function Create(type: int, model: int, pos: Vector, color: Color = null): Pickup;
    /** **(Static Method) >> World/Pickup** [https://sengine.mp-gamer.com/scripting/world/pickup#pickupfind](https://sengine.mp-gamer.com/scripting/world/pickup#pickupfind) */
    declare static function Find(id: int): Pickup;
    /** **(Static Method) >> World/Pickup** [https://sengine.mp-gamer.com/scripting/world/pickup#pickupfindbyuuid](https://sengine.mp-gamer.com/scripting/world/pickup#pickupfindbyuuid) */
    declare static function FindByUUID(uuid: string): Pickup;
    /** **(Static Method) >> World/Pickup** [https://sengine.mp-gamer.com/scripting/world/pickup#pickupgetcount](https://sengine.mp-gamer.com/scripting/world/pickup#pickupgetcount) */
    declare static function GetCount(): int;
    /** **(Static Method) >> World/Pickup** [https://sengine.mp-gamer.com/scripting/world/pickup#pickupget](https://sengine.mp-gamer.com/scripting/world/pickup#pickupget) */
    declare static function Get(index: int): Pickup;
    /** **(Static Method) >> Client/Pickup** [https://sengine.mp-gamer.com/scripting/client/pickup#pickupfind](https://sengine.mp-gamer.com/scripting/client/pickup#pickupfind) */
    declare static function Find(id: int): Pickup;
    /** **(Static Method) >> Client/Pickup** [https://sengine.mp-gamer.com/scripting/client/pickup#pickupfindbyuuid](https://sengine.mp-gamer.com/scripting/client/pickup#pickupfindbyuuid) */
    declare static function FindByUUID(uuid: string): Pickup;
    /** **(Static Method) >> Client/Pickup** [https://sengine.mp-gamer.com/scripting/client/pickup#pickupgetcount](https://sengine.mp-gamer.com/scripting/client/pickup#pickupgetcount) */
    declare static function GetCount(): int;
    /** **(Static Method) >> Client/Pickup** [https://sengine.mp-gamer.com/scripting/client/pickup#pickupget](https://sengine.mp-gamer.com/scripting/client/pickup#pickupget) */
    declare static function Get(index: int): Pickup;
}
/** **(Class) >> World/Pickup** */
declare class Pickup {
    /** **(Public Method) >> World/Pickup** [https://sengine.mp-gamer.com/scripting/world/pickup#pickupremove](https://sengine.mp-gamer.com/scripting/world/pickup#pickupremove) */
    Remove(): void;
    /** **(Public Method) >> World/Pickup** [https://sengine.mp-gamer.com/scripting/world/pickup#pickupcollect](https://sengine.mp-gamer.com/scripting/world/pickup#pickupcollect) */
    Collect(respawnTime: float = 0): void;
    /** **(Public Method) >> World/Pickup** [https://sengine.mp-gamer.com/scripting/world/pickup#pickuprespawn](https://sengine.mp-gamer.com/scripting/world/pickup#pickuprespawn) */
    Respawn(): void;
    /** (Property) >> World/Pickup [https://sengine.mp-gamer.com/scripting/world/pickup#pickupinstance](https://sengine.mp-gamer.com/scripting/world/pickup#pickupinstance) */
    Instance: CPickup;
    /** (Property) >> World/Pickup [https://sengine.mp-gamer.com/scripting/world/pickup#pickupid](https://sengine.mp-gamer.com/scripting/world/pickup#pickupid) */
    ID: int;
    /** (Property) >> World/Pickup [https://sengine.mp-gamer.com/scripting/world/pickup#pickupuuid](https://sengine.mp-gamer.com/scripting/world/pickup#pickupuuid) */
    UUID: string;
    /** (Property) >> World/Pickup [https://sengine.mp-gamer.com/scripting/world/pickup#pickupworld](https://sengine.mp-gamer.com/scripting/world/pickup#pickupworld) */
    World: int;
    /** (Property) >> World/Pickup [https://sengine.mp-gamer.com/scripting/world/pickup#pickuppos](https://sengine.mp-gamer.com/scripting/world/pickup#pickuppos) */
    Pos: Vector;
    /** (Property) >> World/Pickup [https://sengine.mp-gamer.com/scripting/world/pickup#pickuptype](https://sengine.mp-gamer.com/scripting/world/pickup#pickuptype) */
    Type: int;
    /** (Property) >> World/Pickup [https://sengine.mp-gamer.com/scripting/world/pickup#pickupmodel](https://sengine.mp-gamer.com/scripting/world/pickup#pickupmodel) */
    Model: int;
    /** (Property) >> World/Pickup [https://sengine.mp-gamer.com/scripting/world/pickup#pickupcolor](https://sengine.mp-gamer.com/scripting/world/pickup#pickupcolor) */
    Color: Color;
    /** (Property) >> World/Pickup [https://sengine.mp-gamer.com/scripting/world/pickup#pickupislooptrigger](https://sengine.mp-gamer.com/scripting/world/pickup#pickupislooptrigger) */
    IsLoopTrigger: bool;
    /** (Property) >> World/Pickup [https://sengine.mp-gamer.com/scripting/world/pickup#pickupiscollected](https://sengine.mp-gamer.com/scripting/world/pickup#pickupiscollected) */
    IsCollected: bool;
    /** (Property) >> World/Pickup [https://sengine.mp-gamer.com/scripting/world/pickup#pickupentityinstance](https://sengine.mp-gamer.com/scripting/world/pickup#pickupentityinstance) */
    EntityInstance: CEntity;
    /** (Property) >> World/Pickup [https://sengine.mp-gamer.com/scripting/world/pickup#pickupanydata](https://sengine.mp-gamer.com/scripting/world/pickup#pickupanydata) */
    AnyData: any;
    /** (Property) >> World/Pickup [https://sengine.mp-gamer.com/scripting/world/pickup#pickupuniqueid](https://sengine.mp-gamer.com/scripting/world/pickup#pickupuniqueid) */
    UniqueID: int;
    /** (Property) >> World/Pickup [https://sengine.mp-gamer.com/scripting/world/pickup#pickuptag](https://sengine.mp-gamer.com/scripting/world/pickup#pickuptag) */
    Tag: string;
    /** (Property) >> World/Pickup [https://sengine.mp-gamer.com/scripting/world/pickup#pickupoutline](https://sengine.mp-gamer.com/scripting/world/pickup#pickupoutline) */
    Outline: bool;
    /** (Property) >> World/Pickup [https://sengine.mp-gamer.com/scripting/world/pickup#pickupoutlinecolor](https://sengine.mp-gamer.com/scripting/world/pickup#pickupoutlinecolor) */
    OutlineColor: int;
    /** (Property) >> Client/Pickup [https://sengine.mp-gamer.com/scripting/client/pickup#pickupinstance](https://sengine.mp-gamer.com/scripting/client/pickup#pickupinstance) */
    Instance: CPickup;
    /** (Property) >> Client/Pickup [https://sengine.mp-gamer.com/scripting/client/pickup#pickupid](https://sengine.mp-gamer.com/scripting/client/pickup#pickupid) */
    ID: int;
    /** (Property) >> Client/Pickup [https://sengine.mp-gamer.com/scripting/client/pickup#pickupuuid](https://sengine.mp-gamer.com/scripting/client/pickup#pickupuuid) */
    UUID: string;
    /** (Property) >> Client/Pickup [https://sengine.mp-gamer.com/scripting/client/pickup#pickuppos](https://sengine.mp-gamer.com/scripting/client/pickup#pickuppos) */
    Pos: Vector;
    /** (Property) >> Client/Pickup [https://sengine.mp-gamer.com/scripting/client/pickup#pickupmodel](https://sengine.mp-gamer.com/scripting/client/pickup#pickupmodel) */
    Model: int;
    /** (Property) >> Client/Pickup [https://sengine.mp-gamer.com/scripting/client/pickup#pickuptype](https://sengine.mp-gamer.com/scripting/client/pickup#pickuptype) */
    Type: int;
    /** (Property) >> Client/Pickup [https://sengine.mp-gamer.com/scripting/client/pickup#pickupstate](https://sengine.mp-gamer.com/scripting/client/pickup#pickupstate) */
    State: int;
    /** (Property) >> Client/Pickup [https://sengine.mp-gamer.com/scripting/client/pickup#pickupcolor](https://sengine.mp-gamer.com/scripting/client/pickup#pickupcolor) */
    Color: Color;
    /** (Property) >> Client/Pickup [https://sengine.mp-gamer.com/scripting/client/pickup#pickupentityinstance](https://sengine.mp-gamer.com/scripting/client/pickup#pickupentityinstance) */
    EntityInstance: CEntity;
}
/** **(Namespace) >> World/Checkpoint** [https://sengine.mp-gamer.com/scripting/world/checkpoint](https://sengine.mp-gamer.com/scripting/world/checkpoint) */
declare namespace Checkpoint {
    /** **(Static Method) >> World/Checkpoint** [https://sengine.mp-gamer.com/scripting/world/checkpoint#checkpointoncheckpointentered](https://sengine.mp-gamer.com/scripting/world/checkpoint#checkpointoncheckpointentered) */
    declare static function OnCheckpointEntered(Checkpoint: Checkpoint, character: Character): void;
    /** **(Static Method) >> World/Checkpoint** [https://sengine.mp-gamer.com/scripting/world/checkpoint#checkpointoncheckpointexited](https://sengine.mp-gamer.com/scripting/world/checkpoint#checkpointoncheckpointexited) */
    declare static function OnCheckpointExited(Checkpoint: Checkpoint, character: Character): void;
    /** **(Static Method) >> World/Checkpoint** [https://sengine.mp-gamer.com/scripting/world/checkpoint#checkpointcreate](https://sengine.mp-gamer.com/scripting/world/checkpoint#checkpointcreate) */
    declare static function Create(type: int, pos: Vector, color: Color = null, radius: float = 2): Checkpoint;
    /** **(Static Method) >> World/Checkpoint** [https://sengine.mp-gamer.com/scripting/world/checkpoint#checkpointfind](https://sengine.mp-gamer.com/scripting/world/checkpoint#checkpointfind) */
    declare static function Find(id: int): Checkpoint;
    /** **(Static Method) >> World/Checkpoint** [https://sengine.mp-gamer.com/scripting/world/checkpoint#checkpointfindbyuuid](https://sengine.mp-gamer.com/scripting/world/checkpoint#checkpointfindbyuuid) */
    declare static function FindByUUID(uuid: string): Checkpoint;
    /** **(Static Method) >> World/Checkpoint** [https://sengine.mp-gamer.com/scripting/world/checkpoint#checkpointgetcount](https://sengine.mp-gamer.com/scripting/world/checkpoint#checkpointgetcount) */
    declare static function GetCount(): int;
    /** **(Static Method) >> World/Checkpoint** [https://sengine.mp-gamer.com/scripting/world/checkpoint#checkpointget](https://sengine.mp-gamer.com/scripting/world/checkpoint#checkpointget) */
    declare static function Get(index: int): Checkpoint;
    /** **(Static Method) >> Client/Checkpoint** [https://sengine.mp-gamer.com/scripting/client/checkpoint#checkpointfind](https://sengine.mp-gamer.com/scripting/client/checkpoint#checkpointfind) */
    declare static function Find(id: int): Checkpoint;
    /** **(Static Method) >> Client/Checkpoint** [https://sengine.mp-gamer.com/scripting/client/checkpoint#checkpointfindbyuuid](https://sengine.mp-gamer.com/scripting/client/checkpoint#checkpointfindbyuuid) */
    declare static function FindByUUID(uuid: string): Checkpoint;
    /** **(Static Method) >> Client/Checkpoint** [https://sengine.mp-gamer.com/scripting/client/checkpoint#checkpointgetcount](https://sengine.mp-gamer.com/scripting/client/checkpoint#checkpointgetcount) */
    declare static function GetCount(): int;
    /** **(Static Method) >> Client/Checkpoint** [https://sengine.mp-gamer.com/scripting/client/checkpoint#checkpointget](https://sengine.mp-gamer.com/scripting/client/checkpoint#checkpointget) */
    declare static function Get(index: int): Checkpoint;
}
/** **(Class) >> World/Checkpoint** */
declare class Checkpoint {
    /** **(Public Method) >> World/Checkpoint** [https://sengine.mp-gamer.com/scripting/world/checkpoint#checkpointremove](https://sengine.mp-gamer.com/scripting/world/checkpoint#checkpointremove) */
    Remove(): void;
    /** **(Public Method) >> World/Checkpoint** [https://sengine.mp-gamer.com/scripting/world/checkpoint#checkpointgetoccupant](https://sengine.mp-gamer.com/scripting/world/checkpoint#checkpointgetoccupant) */
    GetOccupant(index: int): Character;
    /** (Property) >> World/Checkpoint [https://sengine.mp-gamer.com/scripting/world/checkpoint#checkpointinstance](https://sengine.mp-gamer.com/scripting/world/checkpoint#checkpointinstance) */
    Instance: CCheckpoint;
    /** (Property) >> World/Checkpoint [https://sengine.mp-gamer.com/scripting/world/checkpoint#checkpointid](https://sengine.mp-gamer.com/scripting/world/checkpoint#checkpointid) */
    ID: int;
    /** (Property) >> World/Checkpoint [https://sengine.mp-gamer.com/scripting/world/checkpoint#checkpointuuid](https://sengine.mp-gamer.com/scripting/world/checkpoint#checkpointuuid) */
    UUID: string;
    /** (Property) >> World/Checkpoint [https://sengine.mp-gamer.com/scripting/world/checkpoint#checkpointworld](https://sengine.mp-gamer.com/scripting/world/checkpoint#checkpointworld) */
    World: int;
    /** (Property) >> World/Checkpoint [https://sengine.mp-gamer.com/scripting/world/checkpoint#checkpointpos](https://sengine.mp-gamer.com/scripting/world/checkpoint#checkpointpos) */
    Pos: Vector;
    /** (Property) >> World/Checkpoint [https://sengine.mp-gamer.com/scripting/world/checkpoint#checkpointtype](https://sengine.mp-gamer.com/scripting/world/checkpoint#checkpointtype) */
    Type: int;
    /** (Property) >> World/Checkpoint [https://sengine.mp-gamer.com/scripting/world/checkpoint#checkpointcolor](https://sengine.mp-gamer.com/scripting/world/checkpoint#checkpointcolor) */
    Color: Color;
    /** (Property) >> World/Checkpoint [https://sengine.mp-gamer.com/scripting/world/checkpoint#checkpointradius](https://sengine.mp-gamer.com/scripting/world/checkpoint#checkpointradius) */
    Radius: float;
    /** (Property) >> World/Checkpoint [https://sengine.mp-gamer.com/scripting/world/checkpoint#checkpointoccupantcount](https://sengine.mp-gamer.com/scripting/world/checkpoint#checkpointoccupantcount) */
    OccupantCount: int;
    /** (Property) >> World/Checkpoint [https://sengine.mp-gamer.com/scripting/world/checkpoint#checkpointentityinstance](https://sengine.mp-gamer.com/scripting/world/checkpoint#checkpointentityinstance) */
    EntityInstance: CEntity;
    /** (Property) >> World/Checkpoint [https://sengine.mp-gamer.com/scripting/world/checkpoint#checkpointanydata](https://sengine.mp-gamer.com/scripting/world/checkpoint#checkpointanydata) */
    AnyData: any;
    /** (Property) >> World/Checkpoint [https://sengine.mp-gamer.com/scripting/world/checkpoint#checkpointuniqueid](https://sengine.mp-gamer.com/scripting/world/checkpoint#checkpointuniqueid) */
    UniqueID: int;
    /** (Property) >> World/Checkpoint [https://sengine.mp-gamer.com/scripting/world/checkpoint#checkpointtag](https://sengine.mp-gamer.com/scripting/world/checkpoint#checkpointtag) */
    Tag: string;
    /** (Property) >> World/Checkpoint [https://sengine.mp-gamer.com/scripting/world/checkpoint#checkpointoutline](https://sengine.mp-gamer.com/scripting/world/checkpoint#checkpointoutline) */
    Outline: bool;
    /** (Property) >> World/Checkpoint [https://sengine.mp-gamer.com/scripting/world/checkpoint#checkpointoutlinecolor](https://sengine.mp-gamer.com/scripting/world/checkpoint#checkpointoutlinecolor) */
    OutlineColor: int;
    /** (Property) >> Client/Checkpoint [https://sengine.mp-gamer.com/scripting/client/checkpoint#checkpointinstance](https://sengine.mp-gamer.com/scripting/client/checkpoint#checkpointinstance) */
    Instance: CCheckpoint;
    /** (Property) >> Client/Checkpoint [https://sengine.mp-gamer.com/scripting/client/checkpoint#checkpointid](https://sengine.mp-gamer.com/scripting/client/checkpoint#checkpointid) */
    ID: int;
    /** (Property) >> Client/Checkpoint [https://sengine.mp-gamer.com/scripting/client/checkpoint#checkpointuuid](https://sengine.mp-gamer.com/scripting/client/checkpoint#checkpointuuid) */
    UUID: string;
    /** (Property) >> Client/Checkpoint [https://sengine.mp-gamer.com/scripting/client/checkpoint#checkpointpos](https://sengine.mp-gamer.com/scripting/client/checkpoint#checkpointpos) */
    Pos: Vector;
    /** (Property) >> Client/Checkpoint [https://sengine.mp-gamer.com/scripting/client/checkpoint#checkpointtype](https://sengine.mp-gamer.com/scripting/client/checkpoint#checkpointtype) */
    Type: int;
    /** (Property) >> Client/Checkpoint [https://sengine.mp-gamer.com/scripting/client/checkpoint#checkpointradius](https://sengine.mp-gamer.com/scripting/client/checkpoint#checkpointradius) */
    Radius: float;
    /** (Property) >> Client/Checkpoint [https://sengine.mp-gamer.com/scripting/client/checkpoint#checkpointcolor](https://sengine.mp-gamer.com/scripting/client/checkpoint#checkpointcolor) */
    Color: Color;
    /** (Property) >> Client/Checkpoint [https://sengine.mp-gamer.com/scripting/client/checkpoint#checkpointentityinstance](https://sengine.mp-gamer.com/scripting/client/checkpoint#checkpointentityinstance) */
    EntityInstance: CEntity;
}
/** **(Namespace) >> World/Timer** [https://sengine.mp-gamer.com/scripting/world/timer](https://sengine.mp-gamer.com/scripting/world/timer) */
declare namespace Timer {
    /** **(Static Method) >> World/Timer** [https://sengine.mp-gamer.com/scripting/world/timer#timergetrealtime](https://sengine.mp-gamer.com/scripting/world/timer#timergetrealtime) */
    declare static function GetRealTime(): float;
    /** **(Static Method) >> World/Timer** [https://sengine.mp-gamer.com/scripting/world/timer#timercreate](https://sengine.mp-gamer.com/scripting/world/timer#timercreate) */
    declare static function Create(action: Action, time: float, repeat: int = 1, tag: string = null): TimerObject;
    /** **(Static Method) >> World/Timer** [https://sengine.mp-gamer.com/scripting/world/timer#timerremove](https://sengine.mp-gamer.com/scripting/world/timer#timerremove) */
    declare static function Remove(timerObject: TimerObject): bool;
    /** **(Static Method) >> World/Timer** [https://sengine.mp-gamer.com/scripting/world/timer#timerfind](https://sengine.mp-gamer.com/scripting/world/timer#timerfind) */
    declare static function Find(tag: string): TimerObject;
    /** **(Static Method) >> Client/Timer** [https://sengine.mp-gamer.com/scripting/client/timer#timergetrealtime](https://sengine.mp-gamer.com/scripting/client/timer#timergetrealtime) */
    declare static function GetRealTime(): float;
    /** **(Static Method) >> Client/Timer** [https://sengine.mp-gamer.com/scripting/client/timer#timercreate](https://sengine.mp-gamer.com/scripting/client/timer#timercreate) */
    declare static function Create(action: Action, time: float, repeat: int = 1, tag: string = null): TimerObject;
    /** **(Static Method) >> Client/Timer** [https://sengine.mp-gamer.com/scripting/client/timer#timerremove](https://sengine.mp-gamer.com/scripting/client/timer#timerremove) */
    declare static function Remove(timerObject: TimerObject): bool;
    /** **(Static Method) >> Client/Timer** [https://sengine.mp-gamer.com/scripting/client/timer#timerfind](https://sengine.mp-gamer.com/scripting/client/timer#timerfind) */
    declare static function Find(tag: string): TimerObject;
}
/** **(Class) >> World/Timer** */
declare class Timer {
}
/** **(Namespace) >> Client/Audio** [https://sengine.mp-gamer.com/scripting/client/audio](https://sengine.mp-gamer.com/scripting/client/audio) */
declare namespace Audio {
    /** **(Static Method) >> Client/Audio** [https://sengine.mp-gamer.com/scripting/client/audio#audioplaysound](https://sengine.mp-gamer.com/scripting/client/audio#audioplaysound) */
    declare static function PlaySound(audioID: int, loop: bool = false, volume: float = 1, tag: string = null, uuid: string = null): string;
    /** **(Static Method) >> Client/Audio** [https://sengine.mp-gamer.com/scripting/client/audio#audioplay3dsound](https://sengine.mp-gamer.com/scripting/client/audio#audioplay3dsound) */
    declare static function Play3DSound(audioID: int, pos: Vector, radius: float = 80, loop: bool = false, volume: float = 1, tag: string = null, uuid: string = null): string;
    /** **(Static Method) >> Client/Audio** [https://sengine.mp-gamer.com/scripting/client/audio#audiostopsound](https://sengine.mp-gamer.com/scripting/client/audio#audiostopsound) */
    declare static function StopSound(uuid: string, fadeTime: float = 0): void;
    /** **(Static Method) >> Client/Audio** [https://sengine.mp-gamer.com/scripting/client/audio#audiostopsoundbyid](https://sengine.mp-gamer.com/scripting/client/audio#audiostopsoundbyid) */
    declare static function StopSoundByID(audioID: int, fadeTime: float = 0): void;
    /** **(Static Method) >> Client/Audio** [https://sengine.mp-gamer.com/scripting/client/audio#audiostopsoundbytag](https://sengine.mp-gamer.com/scripting/client/audio#audiostopsoundbytag) */
    declare static function StopSoundByTag(tag: string, fadeTime: float = 0): void;
    /** **(Static Method) >> Client/Audio** [https://sengine.mp-gamer.com/scripting/client/audio#audiostopallsound](https://sengine.mp-gamer.com/scripting/client/audio#audiostopallsound) */
    declare static function StopAllSound(fadeTime: float = 0): void;
    /** **(Static Method) >> Client/Audio** [https://sengine.mp-gamer.com/scripting/client/audio#audioexistsound](https://sengine.mp-gamer.com/scripting/client/audio#audioexistsound) */
    declare static function ExistSound(uuid: string): bool;
    /** **(Static Method) >> Client/Audio** [https://sengine.mp-gamer.com/scripting/client/audio#audioexistsoundbyid](https://sengine.mp-gamer.com/scripting/client/audio#audioexistsoundbyid) */
    declare static function ExistSoundByID(audioID: int): bool;
    /** **(Static Method) >> Client/Audio** [https://sengine.mp-gamer.com/scripting/client/audio#audioexistsoundbytag](https://sengine.mp-gamer.com/scripting/client/audio#audioexistsoundbytag) */
    declare static function ExistSoundByTag(tag: string): bool;
    /** **(Static Method) >> Client/Audio** [https://sengine.mp-gamer.com/scripting/client/audio#audioplaymusic](https://sengine.mp-gamer.com/scripting/client/audio#audioplaymusic) */
    declare static function PlayMusic(audioID: int, loop: bool = false, fadeTime: float = 3): string;
    /** **(Static Method) >> Client/Audio** [https://sengine.mp-gamer.com/scripting/client/audio#audioplay3dmusic](https://sengine.mp-gamer.com/scripting/client/audio#audioplay3dmusic) */
    declare static function Play3DMusic(audioID: int, pos: Vector, radius: float = 80, loop: bool = false, fadeTime: float = 3): string;
    /** **(Static Method) >> Client/Audio** [https://sengine.mp-gamer.com/scripting/client/audio#audiostopmusic](https://sengine.mp-gamer.com/scripting/client/audio#audiostopmusic) */
    declare static function StopMusic(fadeTime: float = 3): void;
    /** **(Static Method) >> Client/Audio** [https://sengine.mp-gamer.com/scripting/client/audio#audiopausemusic](https://sengine.mp-gamer.com/scripting/client/audio#audiopausemusic) */
    declare static function PauseMusic(fadeTime: float = 3): void;
    /** **(Static Method) >> Client/Audio** [https://sengine.mp-gamer.com/scripting/client/audio#audioresumemusic](https://sengine.mp-gamer.com/scripting/client/audio#audioresumemusic) */
    declare static function ResumeMusic(fadeTime: float = 3): void;
    /** **(Static Method) >> Client/Audio** [https://sengine.mp-gamer.com/scripting/client/audio#audioplaynatural](https://sengine.mp-gamer.com/scripting/client/audio#audioplaynatural) */
    declare static function PlayNatural(audioID: int, channel: int, loop: bool = true, fadeTime: float = 3): string;
    /** **(Static Method) >> Client/Audio** [https://sengine.mp-gamer.com/scripting/client/audio#audiostopnatural](https://sengine.mp-gamer.com/scripting/client/audio#audiostopnatural) */
    declare static function StopNatural(channel: int, fadeTime: float = 3): void;
    /** **(Static Method) >> Client/Audio** [https://sengine.mp-gamer.com/scripting/client/audio#audiostopallnatural](https://sengine.mp-gamer.com/scripting/client/audio#audiostopallnatural) */
    declare static function StopAllNatural(fadeTime: float = 3): void;
    /** **(Static Method) >> Client/Audio** [https://sengine.mp-gamer.com/scripting/client/audio#audiogettotalvolume](https://sengine.mp-gamer.com/scripting/client/audio#audiogettotalvolume) */
    declare static function GetTotalVolume(): int;
    /** **(Static Method) >> Client/Audio** [https://sengine.mp-gamer.com/scripting/client/audio#audiogetsoundvolume](https://sengine.mp-gamer.com/scripting/client/audio#audiogetsoundvolume) */
    declare static function GetSoundVolume(): int;
    /** **(Static Method) >> Client/Audio** [https://sengine.mp-gamer.com/scripting/client/audio#audiogetmusicvolume](https://sengine.mp-gamer.com/scripting/client/audio#audiogetmusicvolume) */
    declare static function GetMusicVolume(): int;
    /** **(Static Method) >> Client/Audio** [https://sengine.mp-gamer.com/scripting/client/audio#audiogetnaturalvolume](https://sengine.mp-gamer.com/scripting/client/audio#audiogetnaturalvolume) */
    declare static function GetNaturalVolume(): int;
}
/** **(Class) >> Client/Audio** */
declare class Audio {
    /** **(Public Method) >> Client/Audio** [https://sengine.mp-gamer.com/scripting/client/audio#audiogetplayingmusic](https://sengine.mp-gamer.com/scripting/client/audio#audiogetplayingmusic) */
    GetPlayingMusic(): int;
}
/** **(Namespace) >> Client/Camera** [https://sengine.mp-gamer.com/scripting/client/camera](https://sengine.mp-gamer.com/scripting/client/camera) */
declare namespace Camera {
    /** **(Static Method) >> Client/Camera** [https://sengine.mp-gamer.com/scripting/client/camera#camerafocus](https://sengine.mp-gamer.com/scripting/client/camera#camerafocus) */
    declare static function Focus(): void;
    /** **(Static Method) >> Client/Camera** [https://sengine.mp-gamer.com/scripting/client/camera#camerasetimageeffectactive](https://sengine.mp-gamer.com/scripting/client/camera#camerasetimageeffectactive) */
    declare static function SetImageEffectActive(id: int, active: bool): void;
    /** **(Static Method) >> Client/Camera** [https://sengine.mp-gamer.com/scripting/client/camera#cameragetimageeffectactive](https://sengine.mp-gamer.com/scripting/client/camera#cameragetimageeffectactive) */
    declare static function GetImageEffectActive(id: int): bool;
    /** **(Static Method) >> Client/Camera** [https://sengine.mp-gamer.com/scripting/client/camera#camerasetimageeffectproperty](https://sengine.mp-gamer.com/scripting/client/camera#camerasetimageeffectproperty) */
    declare static function SetImageEffectProperty(id: int, optionKey: int, optionValue: any): void;
    /** **(Static Method) >> Client/Camera** [https://sengine.mp-gamer.com/scripting/client/camera#cameragetimageeffectproperty](https://sengine.mp-gamer.com/scripting/client/camera#cameragetimageeffectproperty) */
    declare static function GetImageEffectProperty(id: int, optionKey: int): any;
    /** **(Static Method) >> Client/Camera** [https://sengine.mp-gamer.com/scripting/client/camera#camerasetcinematicborder](https://sengine.mp-gamer.com/scripting/client/camera#camerasetcinematicborder) */
    declare static function SetCinematicBorder(active: bool, time: float = 1): void;
    /** **(Static Method) >> Client/Camera** [https://sengine.mp-gamer.com/scripting/client/camera#cameragetcinematicborder](https://sengine.mp-gamer.com/scripting/client/camera#cameragetcinematicborder) */
    declare static function GetCinematicBorder(): bool;
    /** **(Static Method) >> Client/Camera** [https://sengine.mp-gamer.com/scripting/client/camera#camerashake](https://sengine.mp-gamer.com/scripting/client/camera#camerashake) */
    declare static function Shake(strength: float = 1, time: float = 1): void;
    /** **(Static Method) >> Client/Camera** [https://sengine.mp-gamer.com/scripting/client/camera#camerapunch](https://sengine.mp-gamer.com/scripting/client/camera#camerapunch) */
    declare static function Punch(strength: float = 1, time: float = 1): void;
    /** **(Static Method) >> Client/Camera** [https://sengine.mp-gamer.com/scripting/client/camera#camerashock](https://sengine.mp-gamer.com/scripting/client/camera#camerashock) */
    declare static function Shock(strength: float = 1, time: float = 1): void;
    /** **(Static Property) >> Client/Camera** [https://sengine.mp-gamer.com/scripting/client/camera#camerapos](https://sengine.mp-gamer.com/scripting/client/camera#camerapos) */
    declare static let Pos: Vector;
    /** **(Static Property) >> Client/Camera** [https://sengine.mp-gamer.com/scripting/client/camera#cameraeulerangle](https://sengine.mp-gamer.com/scripting/client/camera#cameraeulerangle) */
    declare static let EulerAngle: Vector;
    /** **(Static Property) >> Client/Camera** [https://sengine.mp-gamer.com/scripting/client/camera#cameratarget](https://sengine.mp-gamer.com/scripting/client/camera#cameratarget) */
    declare static let Target: Entity;
    /** **(Static Property) >> Client/Camera** [https://sengine.mp-gamer.com/scripting/client/camera#cameratargetpos](https://sengine.mp-gamer.com/scripting/client/camera#cameratargetpos) */
    declare static let TargetPos: Vector;
    /** **(Static Property) >> Client/Camera** [https://sengine.mp-gamer.com/scripting/client/camera#cameraoffset](https://sengine.mp-gamer.com/scripting/client/camera#cameraoffset) */
    declare static let Offset: Vector;
    /** **(Static Property) >> Client/Camera** [https://sengine.mp-gamer.com/scripting/client/camera#cameraslowmode](https://sengine.mp-gamer.com/scripting/client/camera#cameraslowmode) */
    declare static let SlowMode: bool;
    /** **(Static Property) >> Client/Camera** [https://sengine.mp-gamer.com/scripting/client/camera#camerafreemode](https://sengine.mp-gamer.com/scripting/client/camera#camerafreemode) */
    declare static let FreeMode: bool;
    /** **(Static Property) >> Client/Camera** [https://sengine.mp-gamer.com/scripting/client/camera#cameraforwardmode](https://sengine.mp-gamer.com/scripting/client/camera#cameraforwardmode) */
    declare static let ForwardMode: bool;
    /** **(Static Property) >> Client/Camera** [https://sengine.mp-gamer.com/scripting/client/camera#cameraautodistance](https://sengine.mp-gamer.com/scripting/client/camera#cameraautodistance) */
    declare static let AutoDistance: bool;
    /** **(Static Property) >> Client/Camera** [https://sengine.mp-gamer.com/scripting/client/camera#camerarotatespeed](https://sengine.mp-gamer.com/scripting/client/camera#camerarotatespeed) */
    declare static let RotateSpeed: float;
    /** **(Static Property) >> Client/Camera** [https://sengine.mp-gamer.com/scripting/client/camera#cameravangle](https://sengine.mp-gamer.com/scripting/client/camera#cameravangle) */
    declare static let VAngle: float;
    /** **(Static Property) >> Client/Camera** [https://sengine.mp-gamer.com/scripting/client/camera#camerahangle](https://sengine.mp-gamer.com/scripting/client/camera#camerahangle) */
    declare static let HAngle: float;
    /** **(Static Property) >> Client/Camera** [https://sengine.mp-gamer.com/scripting/client/camera#cameradistance](https://sengine.mp-gamer.com/scripting/client/camera#cameradistance) */
    declare static let Distance: float;
    /** **(Static Property) >> Client/Camera** [https://sengine.mp-gamer.com/scripting/client/camera#cameradistancespeed](https://sengine.mp-gamer.com/scripting/client/camera#cameradistancespeed) */
    declare static let DistanceSpeed: float;
    /** **(Static Property) >> Client/Camera** [https://sengine.mp-gamer.com/scripting/client/camera#camerafov](https://sengine.mp-gamer.com/scripting/client/camera#camerafov) */
    declare static let FOV: float;
    /** **(Static Property) >> Client/Camera** [https://sengine.mp-gamer.com/scripting/client/camera#camerasmoothtime](https://sengine.mp-gamer.com/scripting/client/camera#camerasmoothtime) */
    declare static let SmoothTime: float;
    /** **(Static Property) >> Client/Camera** [https://sengine.mp-gamer.com/scripting/client/camera#camerasway](https://sengine.mp-gamer.com/scripting/client/camera#camerasway) */
    declare static let Sway: float;
    /** **(Static Property) >> Client/Camera** [https://sengine.mp-gamer.com/scripting/client/camera#cameraswayspeed](https://sengine.mp-gamer.com/scripting/client/camera#cameraswayspeed) */
    declare static let SwaySpeed: float;
    /** **(Static Property) >> Client/Camera** [https://sengine.mp-gamer.com/scripting/client/camera#cameravignette](https://sengine.mp-gamer.com/scripting/client/camera#cameravignette) */
    declare static let Vignette: float;
    /** **(Static Property) >> Client/Camera** [https://sengine.mp-gamer.com/scripting/client/camera#cameravignettecolor](https://sengine.mp-gamer.com/scripting/client/camera#cameravignettecolor) */
    declare static let VignetteColor: Color;
    /** **(Static Property) >> Client/Camera** [https://sengine.mp-gamer.com/scripting/client/camera#cameralenslut](https://sengine.mp-gamer.com/scripting/client/camera#cameralenslut) */
    declare static let LensLUT: int;
    /** **(Static Property) >> Client/Camera** [https://sengine.mp-gamer.com/scripting/client/camera#cameraisinwater](https://sengine.mp-gamer.com/scripting/client/camera#cameraisinwater) */
    declare static let IsInWater: bool;
}
/** **(Class) >> Client/Camera** */
declare class Camera {
}
/** **(Namespace) >> Client/GUI** [https://sengine.mp-gamer.com/scripting/client/gui](https://sengine.mp-gamer.com/scripting/client/gui) */
declare namespace GUI {
    /** **(Static Method) >> Client/GUI** [https://sengine.mp-gamer.com/scripting/client/gui#guicreate](https://sengine.mp-gamer.com/scripting/client/gui#guicreate) */
    declare static function Create(package: string, component: string): GUI;
    /** **(Static Method) >> Client/GUI** [https://sengine.mp-gamer.com/scripting/client/gui#guigetmodelpreview](https://sengine.mp-gamer.com/scripting/client/gui#guigetmodelpreview) */
    declare static function GetModelPreview(model: int): NTexture;
    /** **(Static Method) >> Client/GUI** [https://sengine.mp-gamer.com/scripting/client/gui#guitexturetoui](https://sengine.mp-gamer.com/scripting/client/gui#guitexturetoui) */
    declare static function TextureToUI(texture: int): NTexture;
    /** **(Static Method) >> Client/GUI** [https://sengine.mp-gamer.com/scripting/client/gui#guiclear](https://sengine.mp-gamer.com/scripting/client/gui#guiclear) */
    declare static function Clear(): void;
    /** **(Static Property) >> Client/GUI** [https://sengine.mp-gamer.com/scripting/client/gui#guimousepos](https://sengine.mp-gamer.com/scripting/client/gui#guimousepos) */
    declare static let MousePos: Vector;
    /** **(Static Property) >> Client/GUI** [https://sengine.mp-gamer.com/scripting/client/gui#guimousescroll](https://sengine.mp-gamer.com/scripting/client/gui#guimousescroll) */
    declare static let MouseScroll: float;
}
/** **(Class) >> Client/GUI** */
declare class GUI {
    /** **(Public Method) >> Client/GUI** [https://sengine.mp-gamer.com/scripting/client/gui#guiremove](https://sengine.mp-gamer.com/scripting/client/gui#guiremove) */
    Remove(): void;
    /** **(Public Method) >> Client/GUI** [https://sengine.mp-gamer.com/scripting/client/gui#guigetchild](https://sengine.mp-gamer.com/scripting/client/gui#guigetchild) */
    GetChild(path: string): GObject;
    /** (Property) >> Client/GUI [https://sengine.mp-gamer.com/scripting/client/gui#guipackage](https://sengine.mp-gamer.com/scripting/client/gui#guipackage) */
    Package: string;
    /** (Property) >> Client/GUI [https://sengine.mp-gamer.com/scripting/client/gui#guicomponent](https://sengine.mp-gamer.com/scripting/client/gui#guicomponent) */
    Component: string;
    /** (Property) >> Client/GUI [https://sengine.mp-gamer.com/scripting/client/gui#guipanel](https://sengine.mp-gamer.com/scripting/client/gui#guipanel) */
    Panel: UIPanel;
    /** (Property) >> Client/GUI [https://sengine.mp-gamer.com/scripting/client/gui#guiui](https://sengine.mp-gamer.com/scripting/client/gui#guiui) */
    UI: GComponent;
}
